// Code generated by goctl. DO NOT EDIT.
package types

type GetEmployeeOptionsRequest struct {
	LikeName        string `form:"likeName,optional"`
	LikeEmail       string `form:"likeEmail,optional"`
	LikePhoneNumber string `form:"likePhoneNumber,optional"`
	PageIndex       int    `form:"pageIndex,optional"`
	PageSize        int    `form:"pageSize,optional"`
}

type EmployeeOption struct {
	Id          int64  `json:"id"`
	Avatar      string `json:"avatar"`
	Account     string `json:"account"`
	Name        string `json:"name"`
	Email       string `json:"email"`
	PhoneNumber string `json:"phoneNumber"`
}

type GetEmployeeOptionsReply struct {
	List      []EmployeeOption `json:"list"`
	PageIndex int              `json:"pageIndex"`
	PageSize  int              `json:"pageSize"`
	Total     int64            `json:"total"`
}

type EmployeeQueryRoleOption struct {
	RoleCode string `json:"roleCode"`
	RoleName string `json:"roleName"`
}

type EmployeeQueryDepartmentOption struct {
	DepartmentId   int64  `json:"departmentId"`
	DepartmentName string `json:"departmentName"`
}

type GetEmployeeQueryOptionsReply struct {
	Positions   []string                        `json:"positions"`
	Roles       []EmployeeQueryRoleOption       `json:"roles"`
	Departments []EmployeeQueryDepartmentOption `json:"departments"`
}

type GetDepartmentOptionsRequest struct {
	Ids       []int64 `form:"ids,optional"`
	LikeName  string  `form:"likeName,optional"`
	PageIndex int     `form:"pageIndex,optional"`
	PageSize  int     `form:"pageSize,optional"`
}

type DepartmentOption struct {
	Id   int64  `json:"id"`
	Name string `json:"name"`
}

type GetDepartmentOptionsReply struct {
	List      []DepartmentOption `json:"list"`
	PageIndex int                `json:"pageIndex"`
	PageSize  int                `json:"pageSize"`
	Total     int64              `json:"total"`
}

type DepartmentLeader struct {
	Id       int64  `json:"id"`
	Name     string `json:"name"`
	NickName string `json:"nickName"`
	Avatar   string `json:"avatar"`
}

type DepartmentNode struct {
	Id          int64            `json:"id"`
	DepName     string           `json:"depName"`
	Leader      DepartmentLeader `json:"leader"`
	PhoneNumber string           `json:"phoneNumber"`
	Email       string           `json:"email"`
	Remark      string           `json:"remark"`
	Children    []DepartmentNode `json:"children"`
}

type GetDepartmentTreeRequest struct {
	DepId int64 `path:"depId"`
}

type GetDepartmentTreeReply struct {
	DepTree DepartmentNode `json:"depTree"`
}

type CreateDepartmentRequest struct {
	DepName     string `json:"depName"`
	LeaderId    int64  `json:"leaderId"`
	PId         int64  `json:"pId"`
	Desc        string `json:"desc,optional"`
	PhoneNumber string `json:"phoneNumber,optional"`
	Email       string `json:"email,optional"`
	Remark      string `json:"remark,optional"`
}

type CreateDepartmentReply struct {
	Id int64 `json:"id"`
}

type DeleteDepartmentRequest struct {
	Id int64 `path:"id"`
}

type DeleteDepartmentReply struct {
	Id int64 `json:"id"`
}

type PatchDepartmentRequest struct {
	Id          int64  `path:"id"`
	DepName     string `json:"depName,optional"`
	LeaderId    int64  `json:"leaderId,optional"`
	PId         int64  `json:"pId,optional"`
	Desc        string `json:"desc,optional"`
	PhoneNumber string `json:"phoneNumber,optional"`
	Email       string `json:"email,optional"`
	Remark      string `json:"remark,optional"`
}

type PatchDepartmentReply struct {
	*Department
}

type Department struct {
	Id          int64            `json:"id"`
	DepName     string           `json:"depName"`
	Leader      DepartmentLeader `json:"leader"`
	PhoneNumber string           `json:"phoneNumber"`
	Email       string           `json:"email"`
	Remark      string           `json:"remark"`
}

type GetDepartmentRequest struct {
	Id int64 `path:"id"`
}

type GetDepartmentReply struct {
	*Department
}

type GetEmployeeRequest struct {
	Id int64 `path:"id"`
}

type GetEmployeeReply struct {
	*Employee
}

type ListEmployeesRequest struct {
	Ids             []int64  `form:"ids,optional"`
	LikeName        string   `form:"likeName,optional"`
	LikeEmail       string   `form:"likeEmail,optional"`
	DepIds          []int64  `form:"depIds,optional"`
	Positions       []string `form:"positions,optional"`
	LikePhoneNumber string   `form:"likePhoneNumber,optional"`
	RoleCodes       []string `form:"roleCodes,optional"`
	IsEnabled       *bool    `form:"isEnable,optional"`
	PageIndex       int      `form:"pageIndex,optional"`
	PageSize        int      `form:"pageSize,optional"`
}

type EmployeeDepartment struct {
	DepId   int64  `json:"depId"`
	DepName string `json:"depName"`
}

type Employee struct {
	Id            int64               `json:"id"`
	Account       string              `json:"account"`
	Name          string              `json:"name"`
	Email         string              `json:"email"`
	MobilePhone   string              `json:"mobilePhone"`
	Gender        string              `json:"gender"`
	NickName      string              `json:"nickName,optional"`
	Desc          string              `json:"desc,optional"`
	Avatar        string              `json:"avatar,optional"`
	ExternalEmail string              `json:"externalEmail,optional"`
	Roles         []string            `json:"roles"`
	Department    *EmployeeDepartment `json:"department"`
	Position      string              `json:"position"`
	JobTitle      string              `json:"jobTitle"`
	IsEnabled     bool                `json:"isEnabled"`
	CreatedAt     string              `json:"createdAt"`
}

type ListEmployeesReply struct {
	List      []Employee `json:"list"`
	PageIndex int        `json:"pageIndex"`
	PageSize  int        `json:"pageSize"`
	Total     int64      `json:"total"`
}

type SyncEmployeesRequest struct {
	Source string `json:"source"`
	Target string `json:"target"`
}

type SyncEmployeesReply struct {
	Status bool `json:"status"`
}

type CreateEmployeeRequest struct {
	Account       string `json:"account"`
	Name          string `json:"name"`
	NickName      string `json:"nickName,optional"`
	Desc          string `json:"desc,optional"`
	Email         string `json:"email"`
	Avatar        string `json:"avatar,optional"`
	ExternalEmail string `json:"externalEmail,optional"`
	MobilePhone   string `json:"mobilePhone,optional"`
	Gender        string `json:"gender,options=male|female|un_know"`
	DepId         int64  `json:"depId"`
	Position      string `json:"position,optional"`
	JobTitle      string `json:"jobTitle,optional"`
	Password      string `json:"password,optional"`
}

type CreateEmployeeReply struct {
	Id int64 `json:"id"`
}

type UpdateEmployeeRequest struct {
	Id            int64  `path:"id"`
	Name          string `json:"name,optional"`
	NickName      string `json:"nickName,optional"`
	Desc          string `json:"desc,optional"`
	Email         string `json:"email,optional"`
	Avatar        string `json:"avatar,optional"`
	ExternalEmail string `json:"externalEmail,optional"`
	MobilePhone   string `json:"mobilePhone,optional"`
	Gender        string `json:"gender,optional,options=male|female|un_know"`
	DepId         int64  `json:"depId,optional"`
	Position      string `json:"position,optional"`
	JobTitle      string `json:"jobTitle,optional"`
	Password      string `json:"password,optional"`
	Status        string `json:"status,optional,options=enabled|disabled"`
}

type UpdateEmployeeReply struct {
	*Employee
}

type DeleteEmployeeRequest struct {
	Id int64 `path:"id"`
}

type DeleteEmployeeReply struct {
	Id int64 `json:"id"`
}

type ResetPasswordRequest struct {
	UserId int64 `json:"userId"`
}

type ResetPasswordReply struct {
	Status string `json:"status"`
}

type AdminAPI struct {
	Id        int64  `json:"id"`
	API       string `json:"api"`
	Method    string `json:"method"`
	Name      string `json:"name"`
	GroupId   int64  `json:"groupId"`
	GroupName string `json:"groupName"`
	Desc      string `json:"desc"`
}

type AdminRole struct {
	RoleCode   string     `json:"roleCode"`
	Name       string     `json:"name"`
	Desc       string     `json:"desc"`
	IsReserved bool       `json:"isReserved"`
	APIList    []AdminAPI `json:"apiList"`
	MenuNames  []string   `json:"menuNames"`
}

type ListRolesReply struct {
	List []AdminRole `json:"list"`
}

type CreateRoleRequest struct {
	RoleCode  string   `json:"roleCode"`
	Name      string   `json:"name"`
	Desc      string   `json:"desc"`
	APIIds    []int64  `json:"apiIds"`
	MenuNames []string `json:"menuNames"`
}

type CreateRoleReply struct {
	RoleCode string `json:"roleCode"`
}

type GetRoleRequest struct {
	RoleCode string `path:"roleCode"`
}

type GetRoleReply struct {
	*AdminRole
}

type PatchRoleReqeust struct {
	RoleCode  string   `path:"roleCode"`
	Name      string   `json:"name"`
	Desc      string   `json:"desc,optional"`
	APIIds    []int64  `json:"apiIds,optional"`
	MenuNames []string `json:"menuNames,optional"`
}

type PatchRoleReply struct {
	*AdminRole
}

type SetRolePermissionsRequest struct {
	RoleCode string  `path:"roleCode"`
	APIIds   []int64 `json:"apiIds"`
}

type SetRolePermissionsReply struct {
	Status string `json:"status"`
}

type SetRoleEmployeesRequest struct {
	RoleCode    string  `path:"roleCode"`
	EmployeeIds []int64 `json:"employeeIds"`
}

type SetRoleEmployeesReply struct {
	Status string `json:"status"`
}

type ListAPIRequest struct {
	GroupId int64 `form:"groupId,optional"`
}

type ListAPIReply struct {
	List []AdminAPI `json:"list"`
}

type GetRoleEmployeesReqeust struct {
	RoleCode  string `path:"roleCode"`
	PageIndex int    `form:"pageIndex"`
	PageSize  int    `form:"pageSize"`
}

type RoleEmployeeDepartment struct {
	Id   int64  `json:"id"`
	Name string `json:"name"`
}

type RoleEmployee struct {
	Id          int64                   `json:"id"`
	Name        string                  `json:"name"`
	Nickname    string                  `json:"nickname"`
	Account     string                  `json:"account"`
	PhoneNumber string                  `json:"phoneNumber"`
	Department  *RoleEmployeeDepartment `json:"department"`
	Email       string                  `json:"email"`
}

type GetRoleEmployeesReply struct {
	List      []RoleEmployee `json:"list"`
	PageIndex int            `json:"pageIndex"`
	PageSize  int            `json:"pageSize"`
	Total     int64          `json:"total"`
}

type SetUserRolesRequest struct {
	UserId    int64    `path:"userId"`
	RoleCodes []string `json:"roleCodes"`
}

type SetUserRolesReply struct {
	Status string `json:"status"`
}

type LoginRequest struct {
	UserName    string `json:"userName,optional"`
	PhoneNumber string `json:"phoneNumber,optional"`
	Email       string `json:"email,optional"`
	Password    string `json:"password"`
}

type LoginReply struct {
	Token        string `json:"token"`
	RefreshToken string `json:"refreshToken"`
}

type ExchangeRequest struct {
	Type string `path:"type,optional=wechat"`
	Code string `json:"code"`
}

type ExchangeReply struct {
	Token        string `json:"token"`
	RefreshToken string `json:"refreshToken"`
}

type ListDictionaryTypesPageRequest struct {
	PageIndex int `form:"pageIndex,optional"`
	PageSize  int `form:"pageSize,optional"`
}

type DictionaryType struct {
	Id          int64             `json:"id,optional"`
	Type        string            `json:"type"`
	Name        string            `json:"name"`
	Description string            `json:"description"`
	Items       []*DictionaryItem `json:"items,optional"`
}

type ListDictionaryTypesPageReply struct {
	List      []DictionaryType `json:"list"`
	PageIndex int              `json:"pageIndex"`
	PageSize  int              `json:"pageSize"`
	Total     int64            `json:"total"`
}

type GetDictionaryTypeRequest struct {
	DictionaryType string `path:"type"`
}

type GetDictionaryTypeReply struct {
	*DictionaryType
}

type CreateDictionaryTypeRequest struct {
	Type        string `json:"type"`
	Name        string `json:"name"`
	Description string `json:"description,optional"`
}

type CreateDictionaryTypeReply struct {
	Type        string `json:"type"`
	Name        string `json:"name"`
	Description string `json:"description,optional"`
}

type UpdateDictionaryTypeRequest struct {
	Type        string `path:"type"`
	Name        string `json:"name,optional"`
	Description string `json:"description,optional"`
}

type UpdateDictionaryTypeReply struct {
	*DictionaryType
}

type DeleteDictionaryTypeRequest struct {
	Type string `path:"type"`
}

type DeleteDictionaryTypeReply struct {
	Type string `json:"type"`
}

type ListDictionaryItemsRequest struct {
	Type      string `form:"type"`
	PageIndex int    `form:"pageIndex,optional"`
	PageSize  int    `form:"pageSize,optional"`
}

type DictionaryItem struct {
	Id          int64  `json:"id,optional"`
	Key         string `json:"key"`
	Type        string `json:"type"`
	Name        string `json:"name"`
	Value       string `json:"value"`
	Sort        int    `json:"sort"`
	Description string `json:"description"`
}

type ListDictionaryItemsReply struct {
	List []DictionaryItem `json:"list"`
}

type GetDictionaryItemRequest struct {
	DictionaryType string `path:"type"`
	DictionaryItem string `path:"key"`
}

type GetDictionaryItemReply struct {
	*DictionaryItem
}

type CreateDictionaryItemRequest struct {
	Key         string `json:"key"`
	Type        string `json:"type"`
	Name        string `json:"name"`
	Value       string `json:"value"`
	Sort        int    `json:"sort,optional"`
	Description string `json:"description,optional"`
}

type CreateDictionaryItemReply struct {
	Key         string `json:"key"`
	Type        string `json:"type"`
	Name        string `json:"name,optional"`
	Value       string `json:"value,optional"`
	Sort        int    `json:"sort,optional"`
	Description string `json:"description,optional"`
}

type UpdateDictionaryItemRequest struct {
	Key         string `path:"key"`
	Type        string `path:"type"`
	Name        string `json:"name,optional"`
	Value       string `json:"value,optional"`
	Sort        int    `json:"sort,optional"`
	Description string `json:"description,optional"`
}

type UpdateDictionaryItemReply struct {
	*DictionaryItem
}

type DeleteDictionaryItemRequest struct {
	Key  string `path:"key"`
	Type string `path:"type"`
}

type DeleteDictionaryItemReply struct {
	Key  string `json:"key"`
	Type string `json:"type"`
}

type GetUserInfoReply struct {
	Id            int64    `json:"id"`
	Account       string   `json:"account"`
	Name          string   `json:"name"`
	Email         string   `json:"email"`
	MobilePhone   string   `json:"mobilePhone"`
	Gender        string   `json:"gender"`
	NickName      string   `json:"nickName"`
	Desc          string   `json:"desc"`
	Avatar        string   `json:"avatar"`
	ExternalEmail string   `json:"externalEmail"`
	DepName       string   `json:"depName"`
	Position      string   `json:"position"`
	JobTitle      string   `json:"jobTitle"`
	IsEnabled     bool     `json:"isEnabled"`
	CreatedAt     string   `json:"createdAt"`
	Roles         []string `json:"roles"`
}

type MenuRoles struct {
	MenuName       string   `json:"menuName"`
	AllowRoleCodes []string `json:"allowRoleCodes"`
}

type GetMenuRolesReply struct {
	MenuRoles []MenuRoles `json:"menuRoles"`
}

type ModifyPasswordReqeust struct {
	Password string `json:"password"`
}

type LeadExternalId struct {
	OpenIdInMiniProgram           string `json:"openIdInMiniProgram,optional"`
	OpenIdInWeChatOfficialAccount string `json:"openIdInWeChatOfficialAccount,optional"`
	OpenIdInWeCom                 string `json:"openIdInWeCom,optional"`
}

type LeadInviter struct {
	Id     int64  `json:"id"`
	Name   string `json:"name,optional"`
	Mobile string `json:"mobile,optional"`
	Email  string `json:"email,optional"`
}

type Lead struct {
	Id          int64        `json:"id,optional"`
	Name        string       `json:"name"`
	Mobile      string       `json:"mobile"`
	Email       string       `json:"email,optional"`
	Inviter     *LeadInviter `json:"inviter,optional"`
	InviterId   int64        `json:"inviter,optional"`
	Source      int          `json:"source,optional"`
	Type        int          `json:"type,optional"`
	IsActivated bool         `json:"isActivated,optional"`
	CreatedAt   string       `json:"createdAt,optional"`
	*LeadExternalId
}

type GetLeadReqeuest struct {
	Id int64 `path:"id"`
}

type GetLeadReply struct {
	Lead *Lead `json:"lead"`
}

type ListLeadsPageRequest struct {
	LikeName   string `form:"likeName,optional"`
	LikeMobile string `form:"likeMobile,optional"`
	Sources    []int  `form:"sources,optional"`
	Statuses   []int  `form:"statuses,optional"`
	PageIndex  int    `form:"page,optional"`
	PageSize   int    `form:"pageSize,optional"`
}

type ListLeadsPageReply struct {
	List      []Lead `json:"list,optional"`
	PageIndex int    `json:"pageIndex,optional"`
	PageSize  int    `json:"pageSize,optional"`
	Total     int64  `json:"total,optional"`
}

type CreateLeadRequest struct {
	Lead
}

type CreateLeadReply struct {
	LeadId int64 `json:"id"`
}

type PutLeadRequest struct {
	LeadId int64 `path:"id"`
	Lead
}

type PutLeadReply struct {
	*Lead
}

type PatchLeadRequest struct {
	LeadId      int64  `path:"id"`
	Name        string `json:"name,optional"`
	Email       string `json:"email,optional"`
	InviterId   int64  `json:"inviterId,optional"`
	Source      int    `json:"source,optional"`
	Type        int    `json:"type,optional"`
	IsActivated bool   `json:"isActivated,optional"`
}

type PatchLeadReply struct {
	*Lead
}

type DeleteLeadRequest struct {
	Id int64 `path:"id"`
}

type DeleteLeadReply struct {
	LeadId int64 `json:"id"`
}

type AssignLeadToEmployeeRequest struct {
	Id         string `path:"id"`
	EmployeeId int64  `json:"employeeId"`
}

type AssignLeadToEmployeeReply struct {
	LeadId int64 `json:"leadId"`
}

type CustomerExternalId struct {
	OpenIdInMiniProgram           string `json:"openIdInMiniProgram,optional"`
	OpenIdInWeChatOfficialAccount string `json:"openIdInWeChatOfficialAccount,optional"`
	OpenIdInWeCom                 string `json:"openIdInWeCom,optional"`
}

type CustomerInviter struct {
	Id     int64  `json:"id"`
	Name   string `json:"name,optional"`
	Mobile string `json:"mobile,optional"`
	Email  string `json:"email,optional"`
}

type Customer struct {
	Id          int64            `json:"id,optional"`
	Name        string           `json:"name"`
	Mobile      string           `json:"mobile"`
	Email       string           `json:"email,optional"`
	Inviter     *CustomerInviter `json:"inviter,optional"`
	InviterId   int64            `json:"inviter,optional"`
	Source      int              `json:"source,optional"`
	Type        int              `json:"type,optional"`
	IsActivated bool             `json:"isActivated,optional"`
	CreatedAt   string           `json:"createdAt,optional"`
	*CustomerExternalId
}

type GetCustomerReqeuest struct {
	Id int64 `path:"id"`
}

type GetCustomerReply struct {
	Customer *Customer `json:"customer"`
}

type ListCustomersPageRequest struct {
	LikeName   string `form:"likeName,optional"`
	LikeMobile string `form:"likeMobile,optional"`
	Sources    []int  `form:"sources,optional"`
	Statuses   []int  `form:"statuses,optional"`
	PageIndex  int    `form:"page,optional"`
	PageSize   int    `form:"pageSize,optional"`
}

type ListCustomersPageReply struct {
	List      []Customer `json:"list,optional"`
	PageIndex int        `json:"pageIndex,optional"`
	PageSize  int        `json:"pageSize,optional"`
	Total     int64      `json:"total,optional"`
}

type CreateCustomerRequest struct {
	Customer
}

type CreateCustomerReply struct {
	CustomerId int64 `json:"id"`
}

type PutCustomerRequest struct {
	CustomerId int64 `path:"id"`
	Customer
}

type PutCustomerReply struct {
	*Customer
}

type PatchCustomerRequest struct {
	CustomerId  int64  `path:"id"`
	Name        string `json:"name,optional"`
	Email       string `json:"email,optional"`
	InviterId   int64  `json:"inviterId,optional"`
	Source      int    `json:"source,optional"`
	Type        int    `json:"type,optional"`
	IsActivated bool   `json:"isActivated,optional"`
}

type PatchCustomerReply struct {
	*Customer
}

type DeleteCustomerRequest struct {
	Id int64 `path:"id"`
}

type DeleteCustomerReply struct {
	CustomerId int64 `json:"id"`
}

type AssignCustomerToEmployeeRequest struct {
	Id         string `path:"id"`
	EmployeeId int64  `json:"employeeId"`
}

type AssignCustomerToEmployeeReply struct {
	CustomerId int64 `json:"customerId"`
}

type GetMediaListRequest struct {
	MediaType string   `form:"mediaType,optional"`
	Keys      []string `form:"keys,optional"`
	OrderBy   string   `form:"orderBy,optional"`
	PageIndex int      `form:"pageIndex,optional"`
	PageSize  int      `form:"pageSize,optional"`
}

type Media struct {
	Key       string `json:"key"`
	MediaType string `json:"mediaType"`
	Meta      string `json:"meta"`
	Remark    string `json:"remark"`
	CreatedAt string `json:"createdAt"`
	UpdatedAt string `json:"updatedAt"`
}

type GetMediaListReply struct {
	List      []Media `json:"list"`
	PageIndex int     `json:"pageIndex"`
	PageSize  int     `json:"pageSize"`
	Total     int64   `json:"total"`
}

type CreateMediaUploadRequest struct {
	FileName string `json:"fileName"`
}

type CreateMediaUploadRequestReply struct {
	MediaKey  string `json:"mediaKey"`
	UploadURL string `json:"uploadURL"`
	ExpiresAt int64  `json:"expiresAt"`
}

type CreateOrUpdateMediaRequest struct {
	MediaKey  string `path:"mediaKey"`
	MediaType string `json:"mediaType,optional"`
	Meta      string `json:"meta,optional"`
	Remark    string `json:"remark,optional"`
}

type CreateOrUpdateMediaReply struct {
	MediaKey string `json:"mediaKey"`
}

type GetMediaByKeyRequest struct {
	MediaKey string `path:"mediaKey"`
}

type GetMediaByKeyReply struct {
	*Media
}

type DeleteMediaRequest struct {
	Key string `path:"id"`
}

type DeleteMediaReply struct {
	Key string `json:"id"`
}

type GetOpportunityListRequest struct {
	Name      string `form:"name,optional"`
	Source    string `form:"source,optional"`
	Type      string `form:"type,optional"`
	Stage     string `form:"stage,optional"`
	OrderBy   string `form:"orderBy,optional"`
	PageIndex int    `form:"pageIndex,optional"`
	PageSize  int    `form:"pageSize,optional"`
}

type Opportunity struct {
	Id          int64   `json:"id"`
	Name        string  `json:"name"`
	Requirement string  `json:"requirement"`
	CustomerId  int64   `json:"customerId"`
	Probability float32 `json:"probability"`
	Source      string  `json:"source"`
	Type        string  `json:"type"`
	EmployeeId  int64   `json:"employeeId"`
	Stage       string  `json:"stage"`
	ClosedDate  string  `json:"closedDate"`
	CreatedAt   string  `json:"createdAt"`
	UpdatedAt   string  `json:"updatedAt"`
}

type GetOpportunityListReply struct {
	List      []Opportunity `json:"list"`
	PageIndex int           `json:"pageIndex"`
	PageSize  int           `json:"pageSize"`
	Total     int64         `json:"total"`
}

type CreateOpportunityRequest struct {
	Name        string  `json:"name"`
	Requirement string  `json:"requirement"`
	CustomerId  int64   `json:"customerId"`
	Probability float32 `json:"probability,optional"`
	Source      string  `json:"source,options=new_customer|old_customer_new_purchase|old_customer_repurchase|old_customer_upgrade"`
	Type        string  `json:"type,options=trial_requirement|requirement_match|detailed_requirement_analysis|solution_provided|quotation|negotiation|closed_unsuccessful|closed_successful"`
	EmployeeId  int64   `json:"employeeId"`
	Stage       string  `json:"stage"`
}

type CreateOpportunityReply struct {
	Id int64 `json:"id"`
}

type AssignEmployeeToOpportunityRequest struct {
	Id         int64 `path:"id"`
	EmployeeId int64 `json:"employeeId"`
}

type AssignEmployeeToOpportunityReply struct {
	Id int64 `json:"id"`
}

type UpdateOpportunityRequest struct {
	Id          int64   `path:"id"`
	Name        string  `json:"name,optional"`
	Requirement string  `json:"requirement,optional"`
	CustomerId  int64   `json:"customerId,optional"`
	Probability float32 `json:"probability,optional"`
	Source      string  `json:"source,optional,options=new_customer|old_customer_new_purchase|old_customer_repurchase|old_customer_upgrade"`
	Type        string  `json:"type,optional,options=trial_requirement|requirement_match|detailed_requirement_analysis|solution_provided|quotation|negotiation|closed_unsuccessful|closed_successful"`
	EmployeeId  int64   `json:"employeeId,optional"`
	Stage       string  `json:"stage,optional"`
	ClosedDate  string  `json:"closedDate,optional"`
}

type UpdateOpportunityReply struct {
	*Opportunity
}

type DeleteOpportunityRequest struct {
	Id int64 `path:"id"`
}

type DeleteOpportunityReply struct {
	Id int64 `json:"id"`
}

type ProductSpecific struct {
	Inventory int16   `json:"inventory,optional"`
	Weight    float32 `json:"weight,optional"`
	Volume    float32 `json:"volume,optional"`
	Encode    string  `json:"encode,optional"`
	BarCode   string  `json:"barCode,optional"`
	Extra     string  `json:"extra,optional"`
}

type PivotDataDictionaryToObject struct {
	DataDictionaryType string `json:"dataDictionaryType,optional"`
	DataDictionaryKey  string `json:"dataDictionaryKey,optional"`
}

type Product struct {
	Id                 int64  `json:"id,optional"`
	Name               string `json:"name"`
	Type               int    `json:"type"`
	Plan               int    `json:"plan"`
	AccountingCategory string `json:"accountingCategory"`
	CanSellOnline      bool   `json:"canSellOnline,optional"`
	CanUseForDeduct    bool   `json:"canUseForDeduct,optional"`
	Description        string `json:"description,optional"`
	CoverURL           string `json:"coverURL,optional"`
	PurchasedQuantity  int    `json:"purchasedQuantity,optional"`
	ValidityPeriodDays uint8  `json:"validityPeriodDays,optional"`
	SaleStartDate      string `json:"saleStartDate,optional"`
	SaleEndDate        string `json:"saleEndDate,optional"`
	ApprovalStatus     int    `json:"approvalStatus,optional"`
	IsActivated        bool   `json:"isActivated,optional"`
	CreatedAt          string `json:"createdAt,optional"`
	ProductSpecific
	PivotSalesChannels     []*PivotDataDictionaryToObject `json:"pivotSalesChannels,optional"`
	PivotPromoteChannels   []*PivotDataDictionaryToObject `json:"pivotPromoteChannels,optional"`
	SalesChannelsItemIds   []int64                        `json:"salesChannelsItemIds,optional"`
	PromoteChannelsItemIds []int64                        `json:"promoteChannelsItemIds,optional"`
}

type ListProductsPageRequest struct {
	ProductType string   `form:"productType,optional"`
	Keys        []string `form:"keys,optional"`
	OrderBy     string   `form:"orderBy,optional"`
	PageIndex   int      `form:"pageIndex,optional"`
	PageSize    int      `form:"pageSize,optional"`
}

type ListProductsPageReply struct {
	List      []Product `json:"list"`
	PageIndex int       `json:"pageIndex"`
	PageSize  int       `json:"pageSize"`
	Total     int64     `json:"total"`
}

type CreateProductRequest struct {
	Product
}

type CreateProductReply struct {
	ProductKey int64 `json:"id"`
}

type GetProductRequest struct {
	ProductId int64 `path:"id"`
}

type GetProductReply struct {
	*Product
}

type PutProductRequest struct {
	ProductId int64 `path:"id"`
	Product
}

type PutProductReply struct {
	*Product
}

type PatchProductRequest struct {
	ProductId int64 `path:"id"`
	Product
}

type PatchProductReply struct {
	*Product
}

type DeleteProductRequest struct {
	ProductId int64 `path:"id"`
}

type DeleteProductReply struct {
	ProductId int64 `json:"id"`
}

type AssignProductToProductCategoryRequest struct {
	Id                int64 `json:"id"`
	ProductCategoryId int64 `json:"productCategoryId"`
}

type AssignProductToProductCategoryReply struct {
	Product
}

type ImageAbleInfo struct {
	Icon            string `json:"icon"`
	BackgroundColor string `json:"backgroundColor"`
	ImageURL        string `json:"imageURL"`
}

type ProductCategory struct {
	Id          int64  `json:"id,optional"`
	PId         int64  `json:"pId"`
	Name        string `json:"name"`
	Sort        int    `json:"sort"`
	ViceName    string `json:"viceName"`
	Description string `json:"description"`
	CreatedAt   string `json:"createdAt,optional"`
	ImageAbleInfo
	Children []ProductCategory `json:"children,optional"`
}

type GetProductCategoryTreeRequest struct {
	Names   []string `form:"name,optional"`
	OrderBy string   `form:"orderBy,optional"`
}

type GetProductCategoryTreeReply struct {
	ProductCategories []ProductCategory `json:"tree"`
}

type UpsertProductCategoryRequest struct {
	ProductCategory
}

type UpsertProductCategoryReply struct {
	*ProductCategory
}

type PatchProductCategoryRequest struct {
	Id  int64 `path:"id"`
	PId int64 `json:"pId"`
}

type PatchProductCategoryReply struct {
	ProductCategory
}

type GetProductCategoryRequest struct {
	ProductCategoryId int64 `path:"id"`
}

type GetProductCategoryReply struct {
	*ProductCategory
}

type DeleteProductCategoryRequest struct {
	Id int64 `path:"id"`
}

type DeleteProductCategoryReply struct {
	Id int64 `json:"id"`
}

type PriceBookEntrySpecific struct {
	Inventory int16   `json:"inventory,optional"`
	Weight    float32 `json:"weight,optional"`
	Volume    float32 `json:"volume,optional"`
	Encode    string  `json:"encode,optional"`
	BarCode   string  `json:"barCode,optional"`
	Extra     string  `json:"extra,optional"`
}

type PriceBook struct {
	Id          int64  `json:"id,optional"`
	IsStandard  bool   `json:"isStandard,optional"`
	Name        string `json:"name"`
	Description string `json:"description,optional"`
	StoreId     int64  `json:"storeId,optional"`
	CreatedAt   string `json:"createdAt,optional"`
}

type PriceBookEntry struct {
	UniqueID    string  `json:"uniqueID,optional"`
	PriceBookId int64   `json:"priceBookId"`
	ProductId   int64   `json:"productId"`
	UnitPrice   float64 `json:"unitPrice"`
	RetailPrice float64 `json:"retailPrice,optional"`
	IsActive    bool    `json:"isActive"`
	PriceBookEntrySpecific
}

type ListPriceBooksPageRequest struct {
	LikeName  string `json:"likeName,optional"`
	StoreId   int64  `json:"storeId,optional"`
	PageIndex int    `form:"pageIndex,optional"`
	PageSize  int    `form:"pageSize,optional"`
}

type ListPriceBooksPageReply struct {
	List      []PriceBook `json:"list"`
	PageIndex int         `json:"pageIndex"`
	PageSize  int         `json:"pageSize"`
	Total     int64       `json:"total"`
}

type GetPriceBookRequest struct {
	PriceBook int64 `path:"id"`
}

type GetPriceBookReply struct {
	*PriceBook
}

type UpsertPriceBookRequest struct {
	PriceBook
}

type UpsertPriceBookReply struct {
	*PriceBook
}

type DeletePriceBookRequest struct {
	Id int64 `path:"id"`
}

type DeletePriceBookReply struct {
	Id int64 `json:"id"`
}

type ConfigPriceBookEntryRequest struct {
	Id int64 `path:"id"`
}

type ConfigPriceBookEntryReply struct {
	Id int64 `json:"id"`
}

type StoreArtisanSpecific struct {
	ArtisanId int64 `json:"artisanId,optional"`
}

type StoreArtisan struct {
	Id              int64                `json:"id,optional"`
	EmployeeId      int64                `json:"employeeId,optional"`
	Name            string               `json:"name,optional"`
	Level           int8                 `json:"level,optional"`
	Gender          string               `json:"gender,optional"`
	Birthday        string               `json:"birthday,optional"`
	PhoneNumber     string               `json:"phoneNumber,optional"`
	CoverURL        string               `json:"coverURL,optional"`
	WorkNo          string               `json:"workNo,optional"`
	Email           string               `json:"email,optional"`
	Experience      uint                 `json:"experience,optional"`
	Specialty       string               `json:"specialty,optional"`
	Certificate     string               `json:"certificate,optional"`
	Address         string               `json:"address,optional"`
	ArtisanSpecific StoreArtisanSpecific `json:"artisanSpecific,optional"`
}

type Store struct {
	Id            int64           `json:"id,optional"`
	Name          string          `json:"name"`
	EmployeeId    int64           `json:"employeeId"`
	ContactNumber string          `json:"contactNumber"`
	CoverURL      string          `json:"coverURL"`
	Address       string          `json:"address"`
	Longitude     float32         `json:"longitude"`
	Latitude      float32         `json:"latitude"`
	StartWork     float32         `json:"startWork"`
	EndWork       float32         `json:"sndWork"`
	Artisans      []*StoreArtisan `json:"artisans,optional"`
	CreatedAt     string          `json:"createdAt,optional"`
}

type GetStoreListRequest struct {
	StoreType string   `form:"storeType,optional"`
	Keys      []string `form:"keys,optional"`
	OrderBy   string   `form:"orderBy,optional"`
}

type GetStoreListReply struct {
	List      []*Store `json:"list"`
	PageIndex int      `json:"pageIndex"`
	PageSize  int      `json:"pageSize"`
	Total     int64    `json:"total"`
}

type CreateStoreRequest struct {
	Store
}

type CreateStoreReply struct {
	StoreId string `json:"id"`
}

type GetStoreRequest struct {
	StoreId int64 `path:"id"`
}

type GetStoreReply struct {
	*Store
}

type PutStoreRequest struct {
	StoreId int64 `path:"storeId"`
	Store
}

type PutStoreReply struct {
	*Store
}

type PatchStoreRequest struct {
	StoreId int64 `path:"storeId"`
	Store
}

type PatchStoreReply struct {
	*Store
}

type DeleteStoreRequest struct {
	StoreId int64 `path:"id"`
}

type DeleteStoreReply struct {
	StoreId int64 `json:"id"`
}

type AssignStoreManagerRequest struct {
	Id         int64 `path:"id"`
	EmployeeId int64 `json:"employeeId"`
}

type AssignStoreManagerReply struct {
	Store
}

type ARefSpecific struct {
	ArtisanId int64 `json:"artisanId,optional"`
}

type Artisan struct {
	Id              int64        `json:"id,optional"`
	EmployeeId      int64        `json:"employeeId,optional"`
	Name            string       `json:"name,optional"`
	Level           int8         `json:"level,optional"`
	Gender          string       `json:"gender,optional"`
	Birthday        string       `json:"birthday,optional"`
	PhoneNumber     string       `json:"phoneNumber,optional"`
	CoverURL        string       `json:"coverURL,optional"`
	WorkNo          string       `json:"workNo,optional"`
	Email           string       `json:"email,optional"`
	Experience      uint         `json:"experience,optional"`
	Specialty       string       `json:"specialty,optional"`
	Certificate     string       `json:"certificate,optional"`
	Address         string       `json:"address,optional"`
	ArtisanSpecific ARefSpecific `json:"artisanSpecific,optional"`
}

type GetArtisanListRequest struct {
	ArtisanType string   `form:"artisanType,optional"`
	Keys        []string `form:"keys,optional"`
	OrderBy     string   `form:"orderBy,optional"`
	PageIndex   int      `form:"pageIndex,optional"`
	PageSize    int      `form:"pageSize,optional"`
}

type GetArtisanListReply struct {
	List      []*Artisan `json:"list"`
	PageIndex int        `json:"pageIndex"`
	PageSize  int        `json:"pageSize"`
	Total     int64      `json:"total"`
}

type CreateArtisanRequest struct {
	Artisan
}

type CreateArtisanReply struct {
	ArtisanId string `json:"id"`
}

type GetArtisanRequest struct {
	ArtisanId int64 `path:"id"`
}

type GetArtisanReply struct {
	*Artisan
}

type PutArtisanRequest struct {
	ArtisanId int64 `path:"artisanId"`
	Artisan
}

type PutArtisanReply struct {
	*Artisan
}

type PatchArtisanRequest struct {
	ArtisanId int64 `path:"artisanId"`
	Artisan
}

type PatchArtisanReply struct {
	*Artisan
}

type DeleteArtisanRequest struct {
	ArtisanId int64 `path:"id"`
}

type DeleteArtisanReply struct {
	ArtisanId int64 `json:"id"`
}

type AssignArtisanManagerRequest struct {
	Id         int64 `path:"id"`
	EmployeeId int64 `json:"employeeId"`
}

type AssignArtisanManagerReply struct {
	Artisan
}

type ContractWayGroupNode struct {
	Id        int64                  `json:"id"`
	GroupName string                 `json:"groupName"`
	Children  []ContractWayGroupNode `json:"children"`
}

type GetContractWayGroupTreeRequest struct {
}

type GetContractWayGroupTreeReply struct {
	GroupTree ContractWayGroupNode `json:"tree"`
}

type ContractWayGroup struct {
	Id        int64  `json:"id"`
	GroupName string `json:"groupName"`
}

type GetContractWayGroupListRequest struct {
	GroupName string `form:"groupName,optional"`
}

type GetContractWayGroupListReply struct {
	Groups []ContractWayGroup `json:"groups"`
}

type GetContractWaysRequest struct {
	EmployeeId int64  `form:"employeeId,optional"`
	Name       string `form:"name,optional"`
	StartDate  string `form:"startDate,optional"`
	EndDate    string `form:"endDate,optional"`
	PageIndex  int    `form:"pageIndex"`
	PageSize   int    `form:"pageSize"`
}

type GetContractWaysReply struct {
	List      []ContractWay `json:"list"`
	PageIndex int           `json:"pageIndex"`
	PageSize  int           `json:"pageSize"`
	Total     int64         `json:"total"`
}

type ContractWay struct {
	Id            int64    `json:"id"`
	Type          int      `json:"type"`
	Scene         int      `json:"scene"`
	Style         string   `json:"style,optional"`
	Remark        string   `json:"remark,optional"`
	SkipVerify    bool     `json:"skipVerify,optional"`
	State         string   `json:"state,optional"`
	Users         []string `json:"users,optional"`
	Parties       []int64  `json:"parties,optional"`
	IsTemp        bool     `json:"isTemp,optional"`
	ExpiresIn     int      `json:"expiresIn,optional"`
	ChatExpiresIn int      `json:"chatExpiresIn,optional"`
	UnionId       string   `json:"unionId,optional"`
	IsExclusive   bool     `json:"isExclusive,optional"`
	Conclusions   string   `json:"conclusions,optional"`
}

type CreateContractWayRequest struct {
	Type          int      `json:"type"`
	Scene         int      `json:"scene"`
	Style         string   `json:"style,optional"`
	Remark        string   `json:"remark,optional"`
	SkipVerify    bool     `json:"skipVerify,optional"`
	State         string   `json:"state,optional"`
	Users         []string `json:"users,optional"`
	Parties       []int64  `json:"parties,optional"`
	IsTemp        bool     `json:"isTemp,optional"`
	ExpiresIn     int      `json:"expiresIn,optional"`
	ChatExpiresIn int      `json:"chatExpiresIn,optional"`
	UnionId       string   `json:"unionId,optional"`
	IsExclusive   bool     `json:"isExclusive,optional"`
	Conclusions   string   `json:"conclusions,optional"`
}

type CreateContractWayReply struct {
	Id int64 `json:"id"`
}

type UpdateContractWayRequest struct {
	Id            int64    `path:"id"`
	Type          int      `json:"type,optional"`
	Scene         int      `json:"scene,optional"`
	Style         string   `json:"style,optional"`
	Remark        string   `json:"remark,optional"`
	SkipVerify    bool     `json:"skipVerify,optional"`
	State         string   `json:"state,optional"`
	Users         []string `json:"users,optional"`
	Parties       []int64  `json:"parties,optional"`
	IsTemp        bool     `json:"isTemp,optional"`
	ExpiresIn     int      `json:"expiresIn,optional"`
	ChatExpiresIn int      `json:"chatExpiresIn,optional"`
	UnionId       string   `json:"unionId,optional"`
	IsExclusive   bool     `json:"isExclusive,optional"`
	Conclusions   string   `json:"conclusions,optional"`
}

type UpdateContractWayReply struct {
	ContractWayUpdated ContractWay `json:"contractWayUpdated"`
}

type DeleteContractWayRequest struct {
	Id int64 `path:"id"`
}

type DeleteContractWayReply struct {
	Id int64 `json:"id"`
}

type WeWorkCustomer struct {
	Name            string   `json:"name"`
	AdderId         int64    `json:"adderId"`
	AddTime         string   `json:"addTime"`
	PatchTime       string   `json:"updateTime"`
	AddChannel      string   `json:"addChannel"`
	TagGroupIdList  []int64  `json:"tagGroupIdList"`
	TagIdList       []int64  `json:"tagIdList"`
	PersonalTagList []string `json:"personalTagList"`
	Age             int      `json:"age"`
	Email           string   `json:"email"`
	PhoneNumber     string   `json:"phoneNumber"`
	Address         string   `json:"address"`
	Birthday        string   `json:"birthday"`
	Remark          string   `json:"remark"`
	GroupChatId     int64    `json:"groupChatId"`
}

type GetWeWorkCustomerRequest struct {
	Id string `path:"id"`
}

type GetWeWorkCustomerReply struct {
	WeWorkCustomer
}

type ListWeWorkCustomersRequest struct {
	LikeName     string `form:"likeName,optional"`
	FollowUserId string `form:"followUserId,optional"`
	AddWay       int    `form:"addWay,optional"`
	PageIndex    int    `form:"pageIndex,optional"`
	PageSize     int    `form:"pageSize,optional"`
}

type ListWeWorkCustomersReply struct {
	List      []GetWeWorkCustomerReply `json:"list"`
	PageIndex int                      `json:"pageIndex"`
	PageSize  int                      `json:"pageSize"`
	Total     int64                    `json:"total"`
}

type PatchWeWorkCustomerRequest struct {
	Id          string `path:"id"`
	Name        string `json:"name,optional"`
	Age         int    `json:"age,optional"`
	Email       string `json:"email,optional"`
	PhoneNumber string `json:"phoneNumber,optional"`
	Address     string `json:"address,optional"`
	Birthday    string `json:"birthday,optional"`
	Remark      string `json:"remark,optional"`
	GroupChatId int64  `json:"groupChatId,optional"`
}

type PatchWeWorkCustomerReply struct {
	WeWorkCustomer
}

type SyncWeWorkCustomerReply struct {
	Status string `json:"status"`
}

type SyncWeWorkContactReply struct {
	Status string `json:"status"`
}

type ListWeWorkEmployeeReqeust struct {
	PageIndex int `form:"pageIndex"`
	PageSize  int `form:"pageSize"`
}

type ListWeWorkEmployeeReply struct {
	PageIndex int `json:"pageIndex"`
	PageSize  int `json:"pageSize"`
	Total     int `json:"total"`
}

type MPCustomerLoginRequest struct {
	Code string `json:"code"`
}

type MPCustomerAuthRequest struct {
	Code          string `json:"code"`
	IV            string `json:"iv"`
	EncryptedData string `json:"encryptedData"`
}

type MPCustomerLoginAuthReply struct {
	OpenId      string `json:"openId"`
	UnionId     string `json:"unionId"`
	PhoneNumber string `json:"phoneNumber"`
	NickName    string `json:"nickName"`
	AvatarURL   string `json:"avatarURL"`
	Gender      string `json:"gender"`
	Token       Token  `json:"token"`
}

type Token struct {
	TokenType    string `json:"tokenType"`
	ExpiresIn    string `json:"expiresIn"`
	AccessToken  string `json:"accessToken"`
	RefreshToken string `json:"refreshToken"`
}

type PivotScheduleToArtisan struct {
	ScheduleId  int64 `json:"scheduleId,optional"`
	ArtisanId   int64 `json:"artisanId,optional"`
	IsAvailable bool  `json:"isAvailable,optional"`
}

type ScheduleReservation struct {
	Id                int64  `json:"id,optional"`
	CustomerId        int64  `json:"customerId"`
	ReservedArtisanId int64  `json:"reservedArtisanId"`
	ServiceId         int64  `json:"serviceId"`
	ReservedTime      string `json:"reservedTime,optional"`
	CancelTime        string `json:"cancelTime,optional"`
	CheckinTime       string `json:"checkinTime,optional"`
	Description       string `json:"description,optional"`
	OperationStatus   int    `json:"operationStatus,optional"`
	ReservationStatus int    `json:"reservationStatus,optional"`
	CreatedAt         string `json:"createdAt,optional"`
}

type Schedule struct {
	Id                     int64                     `json:"id,optional"`
	StoreId                int64                     `json:"storeId"`
	ApprovalStatus         string                    `json:"approvalStatus,optional"`
	Capacity               int32                     `json:"capacity"`
	CopyFromScheduleId     int64                     `json:"copyFromScheduleId,optional"`
	Name                   string                    `json:"name"`
	Description            string                    `json:"description,optional"`
	IsActive               bool                      `json:"isActive,optional"`
	Status                 int                       `json:"status,optional"`
	StartTime              string                    `json:"startTime"`
	EndTime                string                    `json:"endTime"`
	CreatedAt              string                    `json:"createdAt,optional"`
	Reservations           []*ScheduleReservation    `json:"reservations,optional"`
	PivotScheduleToArtisan []*PivotScheduleToArtisan `json:"pivotScheduleToArtisan,optional"`
}

type ListSchedulesRequest struct {
	ScheduleType string `form:"scheduleType,optional"`
	CurrentDate  string `form:"currentDate,optional"`
	StoreId      int64  `form:"storeId"`
	OrderBy      string `form:"orderBy,optional"`
}

type ListSchedulesReply struct {
	List []*Schedule `json:"list"`
}

type ListSchedulesPageRequest struct {
	ScheduleType string `form:"scheduleType,optional"`
	StoreId      int64  `form:"StoreId,optional"`
	OrderBy      string `form:"orderBy,optional"`
	PageIndex    int    `form:"pageIndex,optional"`
	PageSize     int    `form:"pageSize,optional"`
}

type ListSchedulesPageReply struct {
	List      []*Schedule `json:"list"`
	PageIndex int         `json:"pageIndex"`
	PageSize  int         `json:"pageSize"`
	Total     int64       `json:"total"`
}

type CreateScheduleRequest struct {
	Schedule
}

type CreateScheduleReply struct {
	Schedules []Schedule `json:"list"`
	StartDate string     `json:"startDate"`
	EndDate   string     `json:"endDate"`
}

type GetScheduleRequest struct {
	ScheduleId int64 `path:"id"`
}

type GetScheduleReply struct {
	*Schedule
}

type PutScheduleRequest struct {
	ScheduleId int64 `path:"id"`
	Schedule
}

type PutScheduleReply struct {
	*Schedule
}

type PatchScheduleRequest struct {
	ScheduleId int64 `path:"id"`
	Schedule
}

type PatchScheduleReply struct {
	*Schedule
}

type DeleteScheduleRequest struct {
	ScheduleId int64 `path:"id"`
}

type DeleteScheduleReply struct {
	ScheduleId int64 `json:"id"`
}

type AssignScheduleToScheduleCategoryRequest struct {
	Id                 int64 `json:"id"`
	ScheduleCategoryId int64 `json:"scheduleCategoryId"`
}

type AssignScheduleToScheduleCategoryReply struct {
	Schedule
}

type ReservedArtisan struct {
	Name        string `json:"name"`
	Gendar      string `json:"gendar"`
	PhoneNumber string `json:"phoneNumber"`
	CoverURL    string `json:"coverURL"`
	WorkNo      string `json:"workNo"`
}

type ReservedService struct {
	Name              string `json:"name"`
	Duration          int    `json:"duration"`
	MandatoryDuration int    `json:"mandatoryDuration"`
}

type ReservedCustomer struct {
	Name   string `json:"name"`
	Mobile string `json:"mobile"`
	Avatar string `json:"avatar"`
}

type Reservation struct {
	Id                  int64             `json:"id,optional"`
	ScheduleId          int64             `json:"scheduleId"`
	CustomerId          int64             `json:"customerId"`
	ReservedArtisanId   int64             `json:"reservedArtisanId"`
	ServiceId           int64             `json:"serviceId"`
	SourceChannelId     int64             `json:"sourceChannelId"`
	Type                int               `json:"type"`
	ReservedTime        string            `json:"reservedTime,optional"`
	CancelTime          string            `json:"cancelTime,optional"`
	CheckinTime         string            `json:"checkinTime,optional"`
	Description         string            `json:"description,optional"`
	ConsumedPoints      int               `json:"consumedPoints,optional"`
	ConsumeMembershipId int64             `json:"consumeMembershipId,optional"`
	OperationStatus     int               `json:"operationStatus,optional"`
	ReservationStatus   int               `json:"reservationStatus,optional"`
	CreatedAt           string            `json:"createdAt,optional"`
	ReservedCustomer    *ReservedCustomer `json:"reservedCustomer,optional"`
	ReservedArtisan     *ReservedArtisan  `json:"reservedArtisan,optional"`
	ReservedService     *ReservedService  `json:"reservedService,optional"`
}

type ListReservationsRequest struct {
	ScheduleId        int64  `form:"scheduleId"`
	OperationStatus   []int  `form:"operationStatus,optional"`
	ReservationType   []int  `form:"reservationTypes,optional"`
	ReservationStatus []int  `form:"reservationStatus,optional"`
	OrderBy           string `form:"orderBy,optional"`
}

type ListReservationsReply struct {
	List []*Reservation `json:"list"`
}

type ListReservationsPageRequest struct {
	OperationStatus   []int  `form:"operationStatus,optional"`
	ReservationType   []int  `form:"reservationTypes,optional"`
	ReservationStatus []int  `form:"reservationStatus,optional"`
	OrderBy           string `form:"orderBy,optional"`
	PageIndex         int    `form:"pageIndex,optional"`
	PageSize          int    `form:"pageSize,optional"`
}

type ListReservationsPageReply struct {
	List      []*Reservation `json:"list"`
	PageIndex int            `json:"pageIndex"`
	PageSize  int            `json:"pageSize"`
	Total     int64          `json:"total"`
}

type CreateReservationRequest struct {
	Reservation
}

type CreateReservationReply struct {
	ReservationKey int64 `json:"id"`
}

type GetReservationRequest struct {
	ReservationId int64 `path:"id"`
}

type GetReservationReply struct {
	*Reservation
}

type PutReservationRequest struct {
	ReservationId int64 `path:"id"`
	Reservation
}

type PutReservationReply struct {
	*Reservation
}

type PatchReservationRequest struct {
	ReservationId int64 `path:"id"`
	Reservation
}

type PatchReservationReply struct {
	*Reservation
}

type DeleteReservationRequest struct {
	ReservationId int64 `path:"id"`
}

type DeleteReservationReply struct {
	ReservationId int64 `json:"id"`
}

type AssignReservationToReservationCategoryRequest struct {
	Id                    int64 `json:"id"`
	ReservationCategoryId int64 `json:"reservationCategoryId"`
}

type AssignReservationToReservationCategoryReply struct {
	Reservation
}

type ACRefArtisan struct {
	Id          int64  `json:"id,optional"`
	EmployeeId  int64  `json:"employeeId,optional"`
	Name        string `json:"name,optional"`
	Level       int8   `json:"level,optional"`
	Gender      string `json:"gender,optional"`
	Birthday    string `json:"birthday,optional"`
	PhoneNumber string `json:"phoneNumber,optional"`
	CoverURL    string `json:"coverURL,optional"`
	WorkNo      string `json:"workNo,optional"`
	Email       string `json:"email,optional"`
	Experience  uint   `json:"experience,optional"`
	Specialty   string `json:"specialty,optional"`
	Certificate string `json:"certificate,optional"`
	Address     string `json:"address,optional"`
}

type ArtisanSpecific struct {
	ArtisanId          int64        `json:"artisanId,optional"`
	MaxServiceDuration int32        `json:"maxServiceDuration,optional"`
	MandatoryDuration  int32        `json:"mandatoryDuration,optional"`
	Artisan            ACRefArtisan `json:"artisan,optional"`
}

type GetArtisanSpecificListRequest struct {
	ArtisanSpecificType string   `form:"storeType,optional"`
	Keys                []string `form:"keys,optional"`
	OrderBy             string   `form:"orderBy,optional"`
}

type GetArtisanSpecificListReply struct {
	List []*ArtisanSpecific `json:"list"`
}

type CreateArtisanSpecificRequest struct {
	ArtisanSpecific
}

type CreateArtisanSpecificReply struct {
	ArtisanSpecificId string `json:"id"`
}

type GetArtisanSpecificRequest struct {
	ArtisanSpecificId int64 `path:"id"`
}

type GetArtisanSpecificReply struct {
	*ArtisanSpecific
}

type PutArtisanSpecificRequest struct {
	ArtisanSpecificId int64 `path:"storeId"`
	ArtisanSpecific
}

type PutArtisanSpecificReply struct {
	*ArtisanSpecific
}

type PatchArtisanSpecificRequest struct {
	ArtisanSpecificId int64 `path:"storeId"`
	ArtisanSpecific
}

type PatchArtisanSpecificReply struct {
	*ArtisanSpecific
}

type DeleteArtisanSpecificRequest struct {
	ArtisanSpecificId int64 `path:"storeId"`
}

type DeleteArtisanSpecificReply struct {
	ArtisanSpecificId int64 `json:"storeId"`
}

type AssignArtisanSpecificManagerRequest struct {
	Id         int64 `path:"id"`
	EmployeeId int64 `json:"employeeId"`
}

type AssignArtisanSpecificManagerReply struct {
	ArtisanSpecific
}

type SSRefProduct struct {
	Id            int64  `json:"id,optional"`
	Name          string `json:"name"`
	Type          int    `json:"type"`
	Plan          int    `json:"plan"`
	CanSellOnline bool   `json:"canSellOnline,optional"`
	Description   string `json:"description,optional"`
	CoverURL      string `json:"coverURL,optional"`
}

type SSRefStore struct {
	Id            int64   `json:"id,optional"`
	Name          string  `json:"name"`
	EmployeeId    int64   `json:"employeeId"`
	ContactNumber string  `json:"contactNumber"`
	CoverURL      string  `json:"coverURL"`
	Address       string  `json:"address"`
	Longitude     float32 `json:"longitude"`
	Latitude      float32 `json:"latitude"`
	StartWork     float32 `json:"startWork"`
	EndWork       float32 `json:"sndWork"`
}

type ChildSpecific struct {
	Id                int64  `json:"id,optional"`
	IsFree            bool   `json:"isFree,optional"`
	Name              string `json:"name,optional"`
	Duration          int    `json:"duration,optional"`
	MandatoryDuration int    `json:"mandatoryDuration,optional"`
}

type ServiceSpecific struct {
	Id                int64            `json:"id,optional"`
	ParentId          int64            `json:"parentId,optional"`
	ProductId         int64            `json:"productId,optional"`
	IsFree            bool             `json:"isFree,optional"`
	Name              string           `json:"name,optional"`
	Duration          int              `json:"duration,optional"`
	MandatoryDuration int              `json:"mandatoryDuration,optional"`
	CreatedAt         string           `json:"createdAt,optional"`
	Children          []*ChildSpecific `json:"children,optional"`
	Product           *SSRefProduct    `json:"product,optional"`
	Stores            []*SSRefStore    `json:"stores,optional"`
}

type ListServiceSpecificPageRequest struct {
	ServiceSpecificType string   `form:"storeType,optional"`
	Keys                []string `form:"keys,optional"`
	OrderBy             string   `form:"orderBy,optional"`
	PageIndex           int      `form:"pageIndex,optional"`
	PageSize            int      `form:"pageSize,optional"`
}

type ListServiceSpecificPageReply struct {
	List      []*ServiceSpecific `json:"list"`
	PageIndex int                `json:"pageIndex"`
	PageSize  int                `json:"pageSize"`
	Total     int64              `json:"total"`
}

type CreateServiceSpecificRequest struct {
	ServiceSpecific
}

type CreateServiceSpecificReply struct {
	ServiceSpecificId string `json:"id"`
}

type GetServiceSpecificRequest struct {
	ServiceSpecificId int64 `path:"id"`
}

type GetServiceSpecificReply struct {
	*ServiceSpecific
}

type PutServiceSpecificRequest struct {
	ServiceSpecificId int64 `path:"storeId"`
	ServiceSpecific
}

type PutServiceSpecificReply struct {
	*ServiceSpecific
}

type PatchServiceSpecificRequest struct {
	ServiceSpecificId int64 `path:"storeId"`
	ServiceSpecific
}

type PatchServiceSpecificReply struct {
	*ServiceSpecific
}

type DeleteServiceSpecificRequest struct {
	ServiceSpecificId int64 `path:"storeId"`
}

type DeleteServiceSpecificReply struct {
	ServiceSpecificId int64 `json:"storeId"`
}

type AssignServiceSpecificManagerRequest struct {
	Id         int64 `path:"id"`
	EmployeeId int64 `json:"employeeId"`
}

type AssignServiceSpecificManagerReply struct {
	ServiceSpecific
}
