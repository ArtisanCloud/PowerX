// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2

package types

type ActionCorpTagGroupRequest struct {
	AgentId   *int64           `json:"agentId,optional"`
	GroupId   *string          `json:"groupId,optional"`
	GroupName string           `json:"groupName,optional"`
	Tags      []ActionTagGroup `json:"tags"`
}

type ActionCustomerTagRequest struct {
	UserId         string   `json:"userId"`
	ExternalUserId string   `json:"externalUserId"`
	AddTag         []string `json:"addTag,optional"`
	RemoveTag      []string `json:"removeTag,optional"`
}

type ActionQrcodeActiveReply struct {
	Status string `json:"status"`
}

type ActionRequest struct {
	Qid             string `path:"qid"` // 唯一标识
	SceneQrcodeLink string `json:"sceneQrcodeLink,optional"`
}

type ActionTagGroup struct {
	TagId   string `json:"tagId,optional"`
	TagName string `json:"tagName,optional"`
}

type ActionWeWorkGroupQrcodeActiveReply struct {
	Status string `json:"status"`
}

type ActivePriceEntry struct {
	Id        int64   `json:"id,optional"`
	UnitPrice float64 `json:"unitPrice,optional"`
	ListPrice float64 `json:"listPrice,optional"`
	Discount  float32 `json:"discount,optional"`
}

type AddToCartReply struct {
	*CartItem
}

type AddToCartRequest struct {
	CartItem
}

type AdminAPI struct {
	Id        int64  `json:"id"`
	API       string `json:"api"`
	Method    string `json:"method"`
	Name      string `json:"name"`
	GroupId   int64  `json:"groupId"`
	GroupName string `json:"groupName"`
	Desc      string `json:"desc"`
}

type AdminRole struct {
	RoleCode   string     `json:"roleCode"`
	Name       string     `json:"name"`
	Desc       string     `json:"desc"`
	IsReserved bool       `json:"isReserved"`
	APIList    []AdminAPI `json:"apiList"`
	MenuNames  []string   `json:"menuNames"`
}

type AllowPartys struct {
	Partyid []int `json:"partyId"`
}

type AllowTags struct {
	Tagid []int `json:"tagId"`
}

type AllowUserinfos struct {
	User []WeworkUser `json:"user"`
}

type AppGroupCreateReply struct {
	ChatId string `json:"chatId"`
}

type AppGroupCreateRequest struct {
	Name     string   `json:"name"`     // 名称
	Owner    string   `json:"owner"`    // owner
	UserList []string `json:"userList"` // 用户列表
	ChatId   string   `json:"chatId,optional"`
}

type AppGroupListReply struct {
	List interface{} `json:"list"`
}

type AppGroupListRequest struct {
	ChatId string `form:"chatId,optional"`
}

type AppGroupMessageArticleRequest struct {
	ChatIds     []string `json:"chatIds"`
	Title       string   `json:"title"`       // "领奖通知",
	Description string   `json:"description"` // "<div class=\"gray\">2016年9月26日</div> <div class=\"normal\">恭喜你抽中iPhone 7一台，领奖码：xxxx</div><div class=\"highlight\">请于2016年10月10日前联系行政同事领取</div>",
	URL         string   `json:"url"`         // "URL",
	PicURL      string   `json:"picUrl"`      // 多"
	AppID       string   `json:"appId,optional"`
	PagePath    string   `json:"pagePath,optional"`
	SendTime    int64    `json:"sendTime,optional"` // 定时发送，不填默认立刻发送
}

type AppGroupMessageReply struct {
	ChatIds []string `json:"chatIds"`
}

type AppMessageArticlesRequest struct {
	ToUser   string                 `json:"toUser,optional"`   // "UserID1|UserID2|UserID3",
	ToParty  string                 `json:"toParty,optional"`  // "PartyID1|PartyID2",
	ToTag    string                 `json:"toTag,optional"`    // "TagID1 | TagID2",
	MsgType  string                 `json:"msgType"`           // "text",
	AgentID  int                    `json:"agentId"`           // 1,
	News     *AppMessageRequestNews `json:"news"`              // 内容
	SendTime int64                  `json:"sendTime,optional"` // 定时发送，不填默认立刻发送
}

type AppMessageBaseReply struct {
	Message string `json:"message"`
}

type AppMessageRequestNews struct {
	Article []*Article `json:"articles"`
}

type AppWeWorkListReply struct {
	List []*AppWechat `json:"list"`
}

type AppWechat struct {
	Agentid       int    `json:"agentId"`
	Name          string `json:"name"`
	SquareLogoUrl string `json:"squareLogoUrl"`
}

type ApplicationReply struct {
	Agentid                 int            `json:"agentId"`
	Name                    string         `json:"name"`
	SquareLogoUrl           string         `json:"squareLogoUrl"`
	Description             string         `json:"description"`
	AllowUserinfos          AllowUserinfos `json:"allowUserInfos"`
	AllowPartys             AllowPartys    `json:"allowPartys"`
	AllowTags               AllowTags      `json:"allowTags"`
	Close                   int            `json:"close"`
	RedirectDomain          string         `json:"redirectDomain"`
	ReportLocationFlag      int            `json:"reportLocationFlag"`
	Isreportenter           int            `json:"isreportenter"`
	HomeUrl                 string         `json:"homeUrl"`
	CustomizedPublishStatus int            `json:"customizedPublishStatus"`
}

type ApplicationRequest struct {
	AgentId int `form:"agentId"`
}

type Article struct {
	Title       string `json:"title"`       // "领奖通知",
	Description string `json:"description"` // "<div class=\"gray\">2016年9月26日</div> <div class=\"normal\">恭喜你抽中iPhone 7一台，领奖码：xxxx</div><div class=\"highlight\">请于2016年10月10日前联系行政同事领取</div>",
	URL         string `json:"url"`         // "URL",
	PicURL      string `json:"picUrl"`      //
	AppID       string `json:"appId"`
	PagePath    string `json:"pagePath"`
}

type Artisan struct {
	Id             int64            `json:"id,optional"`
	UserId         int64            `json:"userId,optional"`
	Name           string           `json:"name,optional"`
	Level          int8             `json:"level"`
	Gender         bool             `json:"gender,optional"`
	Birthday       string           `json:"birthday,optional"`
	PhoneNumber    string           `json:"phoneNumber,optional"`
	WorkNo         string           `json:"workNo"`
	Email          string           `json:"email,optional"`
	Experience     string           `json:"experience,optional"`
	Specialty      string           `json:"specialty,optional"`
	Certificate    string           `json:"certificate,optional"`
	Address        string           `json:"address,optional"`
	CreatedAt      string           `json:"createdAt,optional"`
	CoverImageId   int64            `json:"coverImageId,optional"`
	CoverImage     *MediaResource   `json:"coverImage,optional"`
	DetailImageIds []int64          `json:"detailImageIds,optional"`
	DetailImages   []*MediaResource `json:"detailIOmages,optional"`
	StoreIds       []int64          `json:"storeIds,optional"`
}

type AssignCustomerToUserReply struct {
	CustomerId int64 `json:"customerId"`
}

type AssignCustomerToUserRequest struct {
	Id     string `path:"id"`
	UserId int64  `json:"userId"`
}

type AssignLeadToUserReply struct {
	LeadId int64 `json:"leadId"`
}

type AssignLeadToUserRequest struct {
	Id     string `path:"id"`
	UserId int64  `json:"userId"`
}

type AssignProductToProductCategoryReply struct {
	Product
}

type AssignProductToProductCategoryRequest struct {
	Id                int64 `json:"id"`
	ProductCategoryId int64 `json:"productCategoryId"`
}

type AssignRegisterCodeToUserReply struct {
	RegisterCodeId int64 `json:"customerId"`
}

type AssignRegisterCodeToUserRequest struct {
	Id     string `path:"id"`
	UserId int64  `json:"userId"`
}

type AssignStoreManagerReply struct {
	Store
}

type AssignStoreManagerRequest struct {
	Id     int64 `path:"id"`
	UserId int64 `json:"userId"`
}

type AssignUserToOpportunityReply struct {
	Id int64 `json:"id"`
}

type AssignUserToOpportunityRequest struct {
	Id     int64 `path:"id"`
	UserId int64 `json:"userId"`
}

type BillingAddress struct {
	Id           int64  `json:"id,optional"`
	OrderId      int64  `gorm:"comment:订单Id; index" json:"orderId"`
	CustomerId   int64  `json:"customerId,optional"`
	Recipient    string `json:"recipient,optional"`
	AddressLine  string `json:"addressLine,optional"`
	AddressLine2 string `json:"addressLine2,optional"`
	Street       string `json:"street,optional"`
	City         string `json:"city,optional"`
	Province     string `json:"province,optional"`
	PostalCode   string `json:"postalCode,optional"`
	Country      string `json:"country,optional"`
	PhoneNumber  string `json:"phoneNumber,optional"`
	IsDefault    bool   `json:"isDefault,optional"`
}

type BindArtisansToStoresReply struct {
	PivotIds []int64 `json:"pivotIds"`
}

type BindArtisansToStoresRequest struct {
	ArtisanIds []int64 `json:"artisanIds"`
	StoreId    []int64 `json:"storeIds"`
}

type CancelOrderReply struct {
	OrderId int64 `json:"orderId,optional"`
}

type CancelOrderRequest struct {
	OrderId int64 `path:"id"`
}

type Cart struct {
	Id         int64       `json:"id", optional"`
	CustomerId int64       `json:"customerId", optional"`
	Status     int         `json:"status", optional"`
	Items      []*CartItem `json:"items", optional"`
}

type CartItem struct {
	Id             int64   `json:"id, optional"`
	CustomerId     int64   `json:"customerId,omitempty,optional"`
	CartId         int64   `json:"cartId,omitempty,optional"`
	ProductId      int64   `json:"productId,omitempty,optional"`
	SkuId          int64   `json:"skuId,omitempty,optional"`
	ProductName    string  `json:"productName,omitempty,optional"`
	ListPrice      float64 `json:"listPrice,omitempty,optional"`
	UnitPrice      float64 `json:"unitPrice,omitempty,optional"`
	Discount       float64 `json:"discount,omitempty,optional"`
	Quantity       int     `json:"quantity,omitempty,optional"`
	Specifications string  `json:"specifications,omitempty,optional"`
	ImageURL       string  `json:"imageUrl,omitempty,optional"`
}

type Category struct {
	Id          int64  `json:"id,optional"`
	PId         int64  `json:"pId"`
	Name        string `json:"name"`
	Sort        int    `json:"sort"`
	ViceName    string `json:"viceName"`
	Description string `json:"description"`
	CreatedAt   string `json:"createdAt,optional"`
	ImageAbleInfo
	CoverImageId int64          `json:"coverImageId,optional"`
	CoverImage   *MediaResource `json:"coverImage,optional"`
	Children     []*Category    `json:"children,optional"`
}

type ClearCartItemsReply struct {
	Message string `json:"message"`
}

type ClearCartItemsRequest struct {
}

type ConfigPriceBookEntryReply struct {
	PriceBookEntries []*PriceBookEntry `json:"list"`
}

type ConfigPriceBookEntryRequest struct {
	PriceBookEntries []PriceBookEntry `json:"priceBookEntries"`
}

type ConfigProductSpecificReply struct {
	Result bool `json:"result"`
}

type ConfigProductSpecificRequest struct {
	ProductSpecifics []ProductSpecific `json:"productSpecifics"`
}

type ConfigProductStatisticsReply struct {
	Result bool `json:"result"`
}

type ConfigProductStatisticsRequest struct {
	*ProductStatistics
}

type ConfigSKUReply struct {
	Result bool `json:"result"`
}

type ConfigSKURequest struct {
	SKUs []SKU `json:"skus"`
}

type Content struct {
	Link Link `json:"link,optional"`
}

type ContractWay struct {
	Id            int64    `json:"id"`
	Type          int      `json:"type"`
	Scene         int      `json:"scene"`
	Style         string   `json:"style,optional"`
	Remark        string   `json:"remark,optional"`
	SkipVerify    bool     `json:"skipVerify,optional"`
	State         string   `json:"state,optional"`
	Users         []string `json:"users,optional"`
	Parties       []int64  `json:"parties,optional"`
	IsTemp        bool     `json:"isTemp,optional"`
	ExpiresIn     int      `json:"expiresIn,optional"`
	ChatExpiresIn int      `json:"chatExpiresIn,optional"`
	UnionId       string   `json:"unionId,optional"`
	IsExclusive   bool     `json:"isExclusive,optional"`
	Conclusions   string   `json:"conclusions,optional"`
}

type ContractWayGroup struct {
	Id        int64  `json:"id"`
	GroupName string `json:"groupName"`
}

type ContractWayGroupNode struct {
	Id        int64                  `json:"id"`
	GroupName string                 `json:"groupName"`
	Children  []ContractWayGroupNode `json:"children"`
}

type CreateArtisanReply struct {
	ArtisanId int64 `json:"id"`
}

type CreateArtisanRequest struct {
	Artisan
}

type CreateBillingAddressReply struct {
	BillingAddressId int64 `json:"id"`
}

type CreateBillingAddressRequest struct {
	BillingAddress *BillingAddress `json:"billingAddress"`
}

type CreateCategoryReply struct {
	*Category
}

type CreateCategoryRequest struct {
	Category
}

type CreateContractWayReply struct {
	Id int64 `json:"id"`
}

type CreateContractWayRequest struct {
	Type          int      `json:"type"`
	Scene         int      `json:"scene"`
	Style         string   `json:"style,optional"`
	Remark        string   `json:"remark,optional"`
	SkipVerify    bool     `json:"skipVerify,optional"`
	State         string   `json:"state,optional"`
	Users         []string `json:"users,optional"`
	Parties       []int64  `json:"parties,optional"`
	IsTemp        bool     `json:"isTemp,optional"`
	ExpiresIn     int      `json:"expiresIn,optional"`
	ChatExpiresIn int      `json:"chatExpiresIn,optional"`
	UnionId       string   `json:"unionId,optional"`
	IsExclusive   bool     `json:"isExclusive,optional"`
	Conclusions   string   `json:"conclusions,optional"`
}

type CreateCorpTagRequest struct {
	GroupId   string         `json:"groupId,optional"` //et2lz4UgAArZWi6ZKx1X8jo3uxfbC_sA 下拉标签组
	GroupName string         `json:"groupName"`
	Sort      int            `json:"Sort,optional"`
	Tag       []*TagFieldTag `json:"tag,optional"`
	AgentId   int64          `json:"agentId,optional"` //应用列表
}

type CreateCustomerReply struct {
	CustomerId int64 `json:"id"`
}

type CreateCustomerRequest struct {
	Customer
}

type CreateDeliveryAddressReply struct {
	DeliveryAddressId int64 `json:"id"`
}

type CreateDeliveryAddressRequest struct {
	DeliveryAddress *DeliveryAddress `json:"deliveryAddress"`
}

type CreateDepartmentReply struct {
	Id int64 `json:"id"`
}

type CreateDepartmentRequest struct {
	DepName     string `json:"depName"`
	LeaderId    int64  `json:"leaderId"`
	PId         int64  `json:"pId"`
	Desc        string `json:"desc,optional"`
	PhoneNumber string `json:"phoneNumber,optional"`
	Email       string `json:"email,optional"`
	Remark      string `json:"remark,optional"`
}

type CreateDictionaryItemReply struct {
	Key         string `json:"key"`
	Type        string `json:"type"`
	Name        string `json:"name,optional"`
	Value       string `json:"value,optional"`
	Sort        int    `json:"sort,optional"`
	Description string `json:"description,optional"`
}

type CreateDictionaryItemRequest struct {
	Key         string `json:"key"`
	Type        string `json:"type"`
	Name        string `json:"name"`
	Value       string `json:"value"`
	Sort        int    `json:"sort,optional"`
	Description string `json:"description,optional"`
}

type CreateDictionaryTypeReply struct {
	Type        string `json:"type"`
	Name        string `json:"name"`
	Description string `json:"description,optional"`
}

type CreateDictionaryTypeRequest struct {
	Type        string `json:"type"`
	Name        string `json:"name"`
	Description string `json:"description,optional"`
}

type CreateEchoRequest struct {
	Echo string `json:"echo,optional"`
}

type CreateEchoResponse struct {
	Response string `json:"response,optional"`
}

type CreateLeadReply struct {
	LeadId int64 `json:"id"`
}

type CreateLeadRequest struct {
	Lead
}

type CreateMGMRuleReply struct {
	MGMRuleId int64 `json:"id"`
}

type CreateMGMRuleRequest struct {
	MGMRule
}

type CreateMediaReply struct {
	MediaId int64 `json:"id"`
}

type CreateMediaRequest struct {
	Media
}

type CreateMediaResourceByBase64Request struct {
	MediaName  string `json:"mediaName"`
	BucketName string `json:"bucketName"`
	Base64Data string `json:"base64Data"`
}

type CreateMediaResourceReply struct {
	*MediaResource
	IsOSS bool `json:"isOSS"`
}

type CreateMenuReply struct {
	Success bool        `json:"success,optional"`
	Data    interface{} `json:"data"`
}

type CreateMenuRequest struct {
	OAMenu
}

type CreateOAMediaReply struct {
	Success bool        `json:"success,optional"`
	Data    interface{} `json:"data"`
}

type CreateOAMediaRequest struct {
	OAMedia interface{} `json:"media"`
}

type CreateOpportunityReply struct {
	Id int64 `json:"id"`
}

type CreateOpportunityRequest struct {
	Name        string  `json:"name"`
	Requirement string  `json:"requirement"`
	CustomerId  int64   `json:"customerId"`
	Probability float32 `json:"probability,optional"`
	Source      string  `json:"source,options=new_customer|old_customer_new_purchase|old_customer_repurchase|old_customer_upgrade"`
	Type        string  `json:"type,options=trial_requirement|requirement_match|detailed_requirement_analysis|solution_provided|quotation|negotiation|closed_unsuccessful|closed_successful"`
	UserId      int64   `json:"userId"`
	Stage       string  `json:"stage"`
}

type CreateOrderByCartItemsReply struct {
	OrderId       int64   `json:"orderId"`
	CartId        int64   `json:"cartId"`
	PaymentAmount float64 `json:"paymentAmount"`
}

type CreateOrderByCartItemsRequest struct {
	CartItemIds       []int64 `json:"cartItemIds"`
	ShippingAddressId int64   `json:"shippingAddressId"`
	Comment           string  `json:"comment"`
}

type CreateOrderByProductsReply struct {
	OrderId       int64   `json:"orderId"`
	PaymentAmount float64 `json:"paymentAmount"`
}

type CreateOrderByProductsRequest struct {
	PriceBookId       int64   `json:"PriceBookId,optional,emptyomit"`
	ProductIds        []int64 `json:"productIds"`
	SkuIds            []int64 `json:"skuIds"`
	Quantities        []int   `json:"quantities"`
	ShippingAddressId int64   `json:"shippingAddressId,optional,emptyomit"`
	Comment           string  `json:"comment"`
}

type CreateOrderReply struct {
	OrderId int64 `json:"orderId,omitempty"`
}

type CreateOrderRequest struct {
	Order
}

type CreatePaymentFromOrderRequest struct {
	OrderId     int64  `json:"orderId"`
	PaymentType int    `json:"paymentType"`
	Comment     string `json:"comment,optional"`
}

type CreatePaymentFromOrderRequestReply struct {
	PaymentId int64       `json:"paymentId"`
	Data      interface{} `json:"data"`
}

type CreatePaymentReply struct {
	PaymentKey int64 `json:"id"`
}

type CreatePaymentRequest struct {
	Payment
}

type CreatePositionReply struct {
	Id int64 `json:"id"`
}

type CreatePositionRequest struct {
	Name      string   `json:"name"`
	Desc      string   `json:"desc,optional"`
	Level     string   `json:"level"`
	RoleCodes []string `json:"roleCodes"`
}

type CreateProductCategoryReply struct {
	*ProductCategory
}

type CreateProductCategoryRequest struct {
	ProductCategory
}

type CreateProductReply struct {
	ProductKey int64 `json:"id"`
}

type CreateProductRequest struct {
	Product
}

type CreateProductSpecificReply struct {
	ProductSpecificId int64 `json:"id"`
}

type CreateProductSpecificRequest struct {
	ProductSpecific
}

type CreateRegisterCodeReply struct {
	RegisterCodeId int64 `json:"id"`
}

type CreateRegisterCodeRequest struct {
	RegisterCode
}

type CreateRoleReply struct {
	RoleCode string `json:"roleCode"`
}

type CreateRoleRequest struct {
	RoleCode  string   `json:"roleCode"`
	Name      string   `json:"name"`
	Desc      string   `json:"desc"`
	APIIds    []int64  `json:"apiIds"`
	MenuNames []string `json:"menuNames"`
}

type CreateSKUReply struct {
	SKUId int64 `json:"id"`
}

type CreateSKURequest struct {
	SKU
}

type CreateShippingAddressReply struct {
	*ShippingAddress
}

type CreateShippingAddressRequest struct {
	ShippingAddress
}

type CreateStoreReply struct {
	StoreId int64 `json:"id"`
}

type CreateStoreRequest struct {
	Store
}

type CreateTagReply struct {
	*Tag
}

type CreateTagRequest struct {
	Tag
}

type CreateUserReply struct {
	Id int64 `json:"id"`
}

type CreateUserRequest struct {
	Account       string `json:"account"`
	Name          string `json:"name"`
	NickName      string `json:"nickName,optional"`
	Desc          string `json:"desc,optional"`
	Email         string `json:"email"`
	Avatar        string `json:"avatar,optional"`
	ExternalEmail string `json:"externalEmail,optional"`
	MobilePhone   string `json:"mobilePhone,optional"`
	Gender        string `json:"gender,options=male|female|un_know"`
	DepId         int64  `json:"depId"`
	PositionId    int64  `json:"positionId,optional"`
	JobTitle      string `json:"jobTitle,optional"`
	Password      string `json:"password,optional"`
}

type CreateWeWorkSourceImageReply struct {
	Link string `json:"link"`
}

type Customer struct {
	Id          int64            `json:"id,optional"`
	AccountId   string           `json:"accountId,optional"`
	Name        string           `json:"name"`
	Mobile      string           `json:"mobile"`
	Email       string           `json:"email,optional"`
	UUID        string           `json:"uuid,optional"`
	Inviter     *CustomerInviter `json:"inviter,optional"`
	InviterId   int64            `json:"inviter,optional"`
	Source      int              `json:"source,optional"`
	Type        int              `json:"type,optional"`
	IsActivated bool             `json:"isActivated,optional,omitempty"`
	CreatedAt   string           `json:"createdAt,optional"`
	*CustomerExternalId
}

type CustomerExternalId struct {
	OpenIdInMiniProgram           string `json:"openIdInMiniProgram,optional"`
	OpenIdInWeChatOfficialAccount string `json:"openIdInWeChatOfficialAccount,optional"`
	OpenIdInWeCom                 string `json:"openIdInWeCom,optional"`
}

type CustomerInviter struct {
	Id     int64  `json:"id"`
	Name   string `json:"name,optional"`
	Mobile string `json:"mobile,optional"`
	Email  string `json:"email,optional"`
}

type CustomerLoginAuthReply struct {
	OpenId      string   `json:"openId"`
	UnionId     string   `json:"unionId"`
	PhoneNumber string   `json:"phoneNumber"`
	NickName    string   `json:"nickName"`
	AvatarURL   string   `json:"avatarURL"`
	Gender      string   `json:"gender"`
	Token       WebToken `json:"token"`
}

type CustomerLoginRequest struct {
	Account  string `json:"account"`
	Password string `json:"password"`
}

type CustomerRegisterByPhoneInInviteCodeRequest struct {
	*CustomerRegisterByPhoneRequest
	InviteCode string `path:"code,optional"`
}

type CustomerRegisterByPhoneInRegisterCodeRequest struct {
	*CustomerRegisterByPhoneRequest
	RegisterCode string `path:"code,optional"`
}

type CustomerRegisterByPhoneReply struct {
	CustomerId int64 `json:"customerId"`
}

type CustomerRegisterByPhoneRequest struct {
	Phone      string `json:"phone"`
	Password   string `json:"password"`
	VerifyCode string `json:"verifyCode,optional"`
}

type CustomerRegisterReply struct {
	CustomerId int64 `json:"customerId"`
}

type CustomerRegisterRequest struct {
	Account    string `json:"account"`
	Password   string `json:"password"`
	VerifyCode string `json:"verifyCode"`
}

type DeleteArtisanReply struct {
	ArtisanId int64 `json:"id"`
}

type DeleteArtisanRequest struct {
	ArtisanId int64 `path:"id"`
}

type DeleteBillingAddressReply struct {
	BillingAddressId int64 `json:"id"`
}

type DeleteBillingAddressRequest struct {
	BillingAddressId int64 `path:"id"`
}

type DeleteCategoryReply struct {
	Id int64 `json:"id"`
}

type DeleteCategoryRequest struct {
	Id int64 `path:"id"`
}

type DeleteContractWayReply struct {
	Id int64 `json:"id"`
}

type DeleteContractWayRequest struct {
	Id int64 `path:"id"`
}

type DeleteCorpTagRequest struct {
	TagIds   []string `json:"tagIds,optional"`
	GroupIds []string `json:"groupIds,optional"`
	AgentId  int64    `json:"agentId,optional"`
}

type DeleteCustomerReply struct {
	CustomerId int64 `json:"id"`
}

type DeleteCustomerRequest struct {
	Id int64 `path:"id"`
}

type DeleteDeliveryAddressReply struct {
	DeliveryAddressId int64 `json:"id"`
}

type DeleteDeliveryAddressRequest struct {
	DeliveryAddressId int64 `path:"id"`
}

type DeleteDepartmentReply struct {
	Id int64 `json:"id"`
}

type DeleteDepartmentRequest struct {
	Id int64 `path:"id"`
}

type DeleteDictionaryItemReply struct {
	Key  string `json:"key"`
	Type string `json:"type"`
}

type DeleteDictionaryItemRequest struct {
	Key  string `path:"key"`
	Type string `path:"type"`
}

type DeleteDictionaryTypeReply struct {
	Type string `json:"type"`
}

type DeleteDictionaryTypeRequest struct {
	Type string `path:"type"`
}

type DeleteLeadReply struct {
	LeadId int64 `json:"id"`
}

type DeleteLeadRequest struct {
	Id int64 `path:"id"`
}

type DeleteMGMRuleReply struct {
	MGMRuleId int64 `json:"id"`
}

type DeleteMGMRuleRequest struct {
	MGMRuleId int64 `path:"id"`
}

type DeleteMediaReply struct {
	MediaId int64 `json:"id"`
}

type DeleteMediaRequest struct {
	MediaId int64 `path:"id"`
}

type DeleteMediaResourceReply struct {
	MediaResourceId int64 `json:"id"`
}

type DeleteMediaResourceRequest struct {
	Id int64 `path:"id"`
}

type DeleteMenuReply struct {
	Success bool        `json:"success"`
	Data    interface{} `json:"data"`
}

type DeleteOAMediaReply struct {
	Success bool        `json:"success"`
	Data    interface{} `json:"data"`
}

type DeleteOAMediaRequest struct {
	MediaId string `path:"mediaId"`
}

type DeleteOpportunityReply struct {
	Id int64 `json:"id"`
}

type DeleteOpportunityRequest struct {
	Id int64 `path:"id"`
}

type DeleteOrderReply struct {
	OrderId int64 `path:"id"`
}

type DeleteOrderRequest struct {
	OrderId int64 `path:"id"`
}

type DeletePaymentReply struct {
	PaymentId int64 `json:"id"`
}

type DeletePaymentRequest struct {
	PaymentId int64 `path:"id"`
}

type DeletePositionReply struct {
	Id int64 `json:"id"`
}

type DeletePositionRequest struct {
	Id int64 `path:"id"`
}

type DeletePriceBookEntryReply struct {
	Id int64 `json:"id"`
}

type DeletePriceBookEntryRequest struct {
	Id int64 `path:"id"`
}

type DeletePriceBookReply struct {
	Id int64 `json:"id"`
}

type DeletePriceBookRequest struct {
	Id int64 `path:"id"`
}

type DeleteProductCategoryReply struct {
	Id int64 `json:"id"`
}

type DeleteProductCategoryRequest struct {
	Id int64 `path:"id"`
}

type DeleteProductReply struct {
	ProductId int64 `json:"id"`
}

type DeleteProductRequest struct {
	ProductId int64 `path:"id"`
}

type DeleteProductSpecificReply struct {
	ProductSpecificId int64 `json:"id"`
}

type DeleteProductSpecificRequest struct {
	ProductSpecificId int64 `path:"id"`
}

type DeleteProductStatisticsReply struct {
	ProductStatisticsId int64 `json:"id"`
}

type DeleteProductStatisticsRequest struct {
	ProductStatisticsId int64 `path:"id"`
}

type DeleteRegisterCodeReply struct {
	RegisterCodeId int64 `json:"id"`
}

type DeleteRegisterCodeRequest struct {
	Id int64 `path:"id"`
}

type DeleteSKUReply struct {
	SKUId int64 `json:"id"`
}

type DeleteSKURequest struct {
	SKUId int64 `path:"id"`
}

type DeleteShippingAddressReply struct {
	ShippingAddressId int64 `json:"id"`
}

type DeleteShippingAddressRequest struct {
	ShippingAddressId int64 `path:"id"`
}

type DeleteStoreReply struct {
	StoreId int64 `json:"id"`
}

type DeleteStoreRequest struct {
	StoreId int64 `path:"id"`
}

type DeleteTagReply struct {
	Id int64 `json:"id"`
}

type DeleteTagRequest struct {
	Id int64 `path:"id"`
}

type DeleteUserReply struct {
	Id int64 `json:"id"`
}

type DeleteUserRequest struct {
	Id int64 `path:"id"`
}

type DeliveryAddress struct {
	Id           int64  `json:"id,optional"`
	OrderId      int64  `gorm:"comment:订单Id; index" json:"orderId"`
	CustomerId   int64  `json:"customerId,optional"`
	Recipient    string `json:"recipient,optional"`
	AddressLine  string `json:"addressLine,optional"`
	AddressLine2 string `json:"addressLine2,optional"`
	Street       string `json:"street,optional"`
	City         string `json:"city,optional"`
	Province     string `json:"province,optional"`
	PostalCode   string `json:"postalCode,optional"`
	Country      string `json:"country,optional"`
	PhoneNumber  string `json:"phoneNumber,optional"`
	IsDefault    bool   `json:"isDefault,optional"`
}

type Department struct {
	Id          int64            `json:"id"`
	DepName     string           `json:"depName"`
	Leader      DepartmentLeader `json:"leader"`
	PhoneNumber string           `json:"phoneNumber"`
	Email       string           `json:"email"`
	Remark      string           `json:"remark"`
}

type DepartmentLeader struct {
	Id       int64  `json:"id"`
	Name     string `json:"name"`
	NickName string `json:"nickName"`
	Avatar   string `json:"avatar"`
}

type DepartmentNode struct {
	Id          int64            `json:"id"`
	DepName     string           `json:"depName"`
	Leader      DepartmentLeader `json:"leader"`
	PhoneNumber string           `json:"phoneNumber"`
	Email       string           `json:"email"`
	Remark      string           `json:"remark"`
	Children    []DepartmentNode `json:"children"`
}

type DepartmentOption struct {
	Id   int64  `json:"id"`
	Name string `json:"name"`
}

type DictionaryItem struct {
	Id          int64  `json:"id,optional"`
	Key         string `json:"key"`
	Type        string `json:"type"`
	Name        string `json:"name"`
	Value       string `json:"value"`
	Sort        int    `json:"sort"`
	Description string `json:"description"`
}

type DictionaryType struct {
	Id          int64             `json:"id,optional"`
	Type        string            `json:"type"`
	Name        string            `json:"name"`
	Description string            `json:"description"`
	Items       []*DictionaryItem `json:"items,optional"`
}

type DisableProductReply struct {
	ProductId int64 `json:"id"`
}

type DisableProductRequest struct {
	ProductId int64 `path:"id"`
}

type ExchangeReply struct {
	Token        string `json:"token"`
	RefreshToken string `json:"refreshToken"`
}

type ExchangeRequest struct {
	Type string `path:"type,optional=wechat"`
	Code string `json:"code"`
}

type ExportOrdersReply struct {
	Content  []byte `json:"content"`
	FileName string `json:"fileName"`
	FileSize int    `json:"fileSize"`
	FileType string `json:"fileType"`
}

type ExportOrdersRequest struct {
	Name      string `form:"name,optional"`
	StartAt   string `form:"startAt"`
	EndAt     string `form:"endAt"`
	TypeIds   []int  `form:"typeIds,optional"`
	StatusIds []int  `form:"statusIds,optional"`
}

type ExternalContactExternalProfileExternalProfileExternalAttrWithMiniprogram struct {
	Appid    string `json:"appid"`
	Pagepath string `json:"pagepath"`
	Title    string `json:"title"`
}

type ExternalContactExternalProfileExternalProfileExternalAttrWithText struct {
	Value string `json:"value"`
}

type ExternalContactExternalProfileExternalProfileExternalAttrWithWeb struct {
	Url   string `json:"url"`
	Title string `json:"title"`
}

type ExternalContactExternalProfileExternalProfileWithExternalAttr struct {
	Type        int                                                                      `json:"type"`
	Name        string                                                                   `json:"name"`
	Text        ExternalContactExternalProfileExternalProfileExternalAttrWithText        `json:"text"`
	Web         ExternalContactExternalProfileExternalProfileExternalAttrWithWeb         `json:"web"`
	Miniprogram ExternalContactExternalProfileExternalProfileExternalAttrWithMiniprogram `json:"miniprogram"`
}

type ExternalContactExternalProfileWithExternalProfile struct {
	ExternalAttr []*ExternalContactExternalProfileExternalProfileWithExternalAttr `json:"externalAttr"`
}

type GenerateRegisterCodeReply struct {
	Result bool `json:"result"`
}

type GenerateRegisterCodeRequest struct {
	BatchCount int `json:"batchCount"`
}

type GetArtisanReply struct {
	*Artisan
}

type GetArtisanRequest struct {
	ArtisanId int64 `path:"id"`
}

type GetBillingAddressReply struct {
	BillingAddress *BillingAddress `json:"billingAddress"`
}

type GetBillingAddressRequest struct {
	BillingAddressId int64 `path:"id"`
}

type GetCartReply struct {
	*Cart
}

type GetCartRequest struct {
}

type GetCategoryReply struct {
	*Category
}

type GetCategoryRequest struct {
	CategoryId int64 `path:"id"`
}

type GetContractWayGroupListReply struct {
	Groups []ContractWayGroup `json:"groups"`
}

type GetContractWayGroupListRequest struct {
	GroupName string `form:"groupName,optional"`
}

type GetContractWayGroupTreeReply struct {
	GroupTree ContractWayGroupNode `json:"tree"`
}

type GetContractWayGroupTreeRequest struct {
}

type GetContractWaysReply struct {
	List      []ContractWay `json:"list"`
	PageIndex int           `json:"pageIndex"`
	PageSize  int           `json:"pageSize"`
	Total     int64         `json:"total"`
}

type GetContractWaysRequest struct {
	UserId    int64  `form:"userId,optional"`
	Name      string `form:"name,optional"`
	StartDate string `form:"startDate,optional"`
	EndDate   string `form:"endDate,optional"`
	PageIndex int    `form:"pageIndex"`
	PageSize  int    `form:"pageSize"`
}

type GetCustomerBalanceReply struct {
	*TokenBalance
}

type GetCustomerMembershipByTypeReply struct {
	*Membership
}

type GetCustomerMembershipByTypeRequest struct {
	TypeId int64 `form:"typeId"`
}

type GetCustomerReply struct {
	Customer *Customer `json:"customer"`
}

type GetCustomerRequest struct {
	Id int64 `path:"id"`
}

type GetDeliveryAddressReply struct {
	DeliveryAddress *DeliveryAddress `json:"deliveryAddress"`
}

type GetDeliveryAddressRequest struct {
	DeliveryAddressId int64 `path:"id"`
}

type GetDepartmentOptionsReply struct {
	List      []DepartmentOption `json:"list"`
	PageIndex int                `json:"pageIndex"`
	PageSize  int                `json:"pageSize"`
	Total     int64              `json:"total"`
}

type GetDepartmentOptionsRequest struct {
	Ids       []int64 `form:"ids,optional"`
	LikeName  string  `form:"likeName,optional"`
	PageIndex int     `form:"pageIndex,optional"`
	PageSize  int     `form:"pageSize,optional"`
}

type GetDepartmentReply struct {
	*Department
}

type GetDepartmentRequest struct {
	Id int64 `path:"id"`
}

type GetDepartmentTreeReply struct {
	DepTree DepartmentNode `json:"depTree"`
}

type GetDepartmentTreeRequest struct {
	DepId int64 `path:"depId"`
}

type GetDictionaryItemReply struct {
	*DictionaryItem
}

type GetDictionaryItemRequest struct {
	DictionaryType string `path:"type"`
	DictionaryItem string `path:"key"`
}

type GetDictionaryTypeReply struct {
	*DictionaryType
}

type GetDictionaryTypeRequest struct {
	DictionaryType string `path:"type"`
}

type GetHomeReply struct {
	Greet       string `json:"greet,optional"`
	Description string `json:"description,optional"`
	Version     string `json:"version,optional"`
}

type GetLeadReply struct {
	Lead *Lead `json:"lead"`
}

type GetLeadRequest struct {
	Id int64 `path:"id"`
}

type GetMGMRuleReply struct {
	*MGMRule
}

type GetMGMRuleRequest struct {
	MGMRuleId int64 `path:"id"`
}

type GetMediaReply struct {
	*Media
}

type GetMediaRequest struct {
	MediaId int64 `path:"id"`
}

type GetMediaResourceReply struct {
	MediaResource *MediaResource `json:"mediaResource"`
}

type GetMediaResourceRequest struct {
	Id int64 `path:"id"`
}

type GetMembershipReply struct {
	*Membership
}

type GetMembershipRequest struct {
	Id int64 `path:"id"`
}

type GetMenuRolesReply struct {
	MenuRoles []MenuRoles `json:"menuRoles"`
}

type GetOAMediaByVideoReply struct {
	Title       string `json:"title"`
	Description string `json:"description"`
	DownUrl     string `json:"down_url"`
}

type GetOAMediaListReply struct {
	TotalCount interface{} `json:"total_count"`
	ItemCount  interface{} `json:"item_count"`
	Item       interface{} `json:"item"`
}

type GetOAMediaListRequest struct {
	Offset    int64  `json:"offset,optional"`
	Count     int64  `json:"count,optional"`
	MediaType string `json:"type"`
}

type GetOAMediaNewsListReply struct {
	NewsItem interface{} `json:"news_item"`
}

type GetOAMediaReply struct {
	OAMedia interface{} `json:"media"`
}

type GetOAMediaRequest struct {
	MediaId string `path:"mediaId"`
}

type GetOpportunityListReply struct {
	List      []Opportunity `json:"list"`
	PageIndex int           `json:"pageIndex"`
	PageSize  int           `json:"pageSize"`
	Total     int64         `json:"total"`
}

type GetOpportunityListRequest struct {
	Name      string `form:"name,optional"`
	Source    string `form:"source,optional"`
	Type      string `form:"type,optional"`
	Stage     string `form:"stage,optional"`
	OrderBy   string `form:"orderBy,optional"`
	PageIndex int    `form:"pageIndex,optional"`
	PageSize  int    `form:"pageSize,optional"`
}

type GetOptionsReply struct {
	Options []map[string]interface{} `json:"options"`
}

type GetOptionsRequest struct {
	Type   string `form:"type,optional"`
	Search string `form:"search,optional"`
}

type GetOrderReply struct {
	*Order
}

type GetOrderRequest struct {
	OrderId int64 `path:"id"`
}

type GetPaymentReply struct {
	*Payment
}

type GetPaymentRequest struct {
	PaymentId int64 `path:"id"`
}

type GetPositionReply struct {
	*Position
}

type GetPositionRequest struct {
	Id int64 `path:"id"`
}

type GetPriceBookEntryReply struct {
	*PriceBookEntry
}

type GetPriceBookEntryRequest struct {
	PriceBookEntry int64 `path:"id"`
}

type GetPriceBookReply struct {
	*PriceBook
}

type GetPriceBookRequest struct {
	PriceBook int64 `path:"id"`
}

type GetProductCategoryReply struct {
	*ProductCategory
}

type GetProductCategoryRequest struct {
	ProductCategoryId int64 `path:"id"`
}

type GetProductReply struct {
	*Product
}

type GetProductRequest struct {
	ProductId int64 `path:"id"`
}

type GetProductSpecificReply struct {
	*ProductSpecific
}

type GetProductSpecificRequest struct {
	ProductSpecificId int64 `path:"id"`
}

type GetProductStatisticsReply struct {
	*ProductStatistics
}

type GetProductStatisticsRequest struct {
	ProductId int64 `path:"id"`
}

type GetRegisterCodeReply struct {
	RegisterCode *RegisterCode `json:"customer"`
}

type GetRegisterCodeRequest struct {
	Id int64 `path:"id"`
}

type GetRoleReply struct {
	*AdminRole
}

type GetRoleRequest struct {
	RoleCode string `path:"roleCode"`
}

type GetRoleUsersReply struct {
	List      []RoleUser `json:"list"`
	PageIndex int        `json:"pageIndex"`
	PageSize  int        `json:"pageSize"`
	Total     int64      `json:"total"`
}

type GetRoleUsersReqeust struct {
	RoleCode  string `path:"roleCode"`
	PageIndex int    `form:"pageIndex"`
	PageSize  int    `form:"pageSize"`
}

type GetSKUReply struct {
	*SKU
}

type GetSKURequest struct {
	SKUId int64 `path:"id"`
}

type GetShippingAddressReply struct {
	*ShippingAddress
}

type GetShippingAddressRequest struct {
	ShippingAddressId int64 `path:"id"`
}

type GetStoreReply struct {
	*Store
}

type GetStoreRequest struct {
	StoreId int64 `path:"id"`
}

type GetTagReply struct {
	*Tag
}

type GetTagRequest struct {
	TagId int64 `path:"id"`
}

type GetUserInfoReply struct {
	Id            int64    `json:"id"`
	Account       string   `json:"account"`
	Name          string   `json:"name"`
	Email         string   `json:"email"`
	MobilePhone   string   `json:"mobilePhone"`
	Gender        string   `json:"gender"`
	NickName      string   `json:"nickName"`
	Desc          string   `json:"desc"`
	Avatar        string   `json:"avatar"`
	ExternalEmail string   `json:"externalEmail"`
	DepName       string   `json:"depName"`
	Position      string   `json:"position"`
	JobTitle      string   `json:"jobTitle"`
	IsEnabled     bool     `json:"isEnabled"`
	CreatedAt     string   `json:"createdAt"`
	Roles         []string `json:"roles"`
}

type GetUserInfoReplyForMP struct {
	*Customer
}

type GetUserInfoReplyForWeb struct {
	*Customer
}

type GetUserOptionsReply struct {
	List      []UserOption `json:"list"`
	PageIndex int          `json:"pageIndex"`
	PageSize  int          `json:"pageSize"`
	Total     int64        `json:"total"`
}

type GetUserOptionsRequest struct {
	LikeName        string `form:"likeName,optional"`
	LikeEmail       string `form:"likeEmail,optional"`
	LikePhoneNumber string `form:"likePhoneNumber,optional"`
	PageIndex       int    `form:"pageIndex,optional"`
	PageSize        int    `form:"pageSize,optional"`
}

type GetUserQueryOptionsReply struct {
	Roles       []UserQueryRoleOption       `json:"roles"`
	Departments []UserQueryDepartmentOption `json:"departments"`
}

type GetUserReply struct {
	*User
}

type GetUserRequest struct {
	Id int64 `path:"id"`
}

type GetVersionResponse struct {
	Version string `json:"version,optional"`
}

type GroupRobotMsgNewsArticlesReply struct {
	Messaage string `json:"messaage"`
}

type GroupRobotMsgNewsArticlesRequest struct {
	Key         string `json:"key"` // 机器人key
	Title       string `json:"title"`
	Description string `json:"description,omitempty"`
	Url         string `json:"url"`
	PicUrl      string `json:"picurl,omitempty"`
}

type GroupWithTag struct {
	GroupId   string       `json:"groupId"`
	GroupName string       `json:"groupName"`
	Tags      []*WeWorkTag `json:"tags"`
}

type HealthCheckReply struct {
}

type HealthCheckRequest struct {
}

type Image struct {
	MediaId string `json:"mediaId,optional"` // 不填
	PicUrl  string `json:"picUrl,optional"`  // 图片地址
}

type ImageAbleInfo struct {
	Icon            string `json:"icon"`
	BackgroundColor string `json:"backgroundColor"`
}

type ImportOrdersReply struct {
	Total   int `json:"total"`
	Failed  int `json:"failed"`
	Ignored int `json:"ignored"`
	Success int `json:"success"`
}

type ImportOrdersRequest struct {
	Content []byte `json:"content"`
}

type Lead struct {
	Id          int64        `json:"id,optional"`
	Name        string       `json:"name"`
	Mobile      string       `json:"mobile"`
	Email       string       `json:"email,optional"`
	Inviter     *LeadInviter `json:"inviter,optional"`
	InviterId   int64        `json:"inviter,optional"`
	Source      int          `json:"source,optional"`
	Type        int          `json:"type,optional"`
	IsActivated bool         `json:"isActivated,optional,omitempty"`
	CreatedAt   string       `json:"createdAt,optional"`
	*LeadExternalId
}

type LeadExternalId struct {
	OpenIdInMiniProgram           string `json:"openIdInMiniProgram,optional"`
	OpenIdInWeChatOfficialAccount string `json:"openIdInWeChatOfficialAccount,optional"`
	OpenIdInWeCom                 string `json:"openIdInWeCom,optional"`
}

type LeadInviter struct {
	Id     int64  `json:"id"`
	Name   string `json:"name,optional"`
	Mobile string `json:"mobile,optional"`
	Email  string `json:"email,optional"`
}

type Link struct {
	MsgType string `json:"msgType,optional"` // 默认:link
	Title   string `json:"title"`            //  "消息标题",
	PicURL  string `json:"picUrl"`           //  "https://example.pic.com/path",
	Desc    string `json:"desc"`             //  "消息描述",
	URL     string `json:"url"`              //  "https://example.link.com/path"
}

type ListAPIReply struct {
	List []AdminAPI `json:"list"`
}

type ListAPIRequest struct {
	GroupId int64 `form:"groupId,optional"`
}

type ListArtisansPageReply struct {
	List      []*Artisan `json:"list"`
	PageIndex int        `json:"pageIndex"`
	PageSize  int        `json:"pageSize"`
	Total     int64      `json:"total"`
}

type ListArtisansPageRequest struct {
	Ids       []int64 `form:"ids,optional"`
	StoreIds  []int64 `form:"storeIds,optional"`
	LikeName  string  `form:"likeName,optional"`
	OrderBy   string  `form:"orderBy,optional"`
	PageIndex int     `form:"pageIndex,optional"`
	PageSize  int     `form:"pageSize,optional"`
}

type ListBillingAddressesPageReply struct {
	List      []*BillingAddress `json:"list"`
	PageIndex int               `json:"pageIndex"`
	PageSize  int               `json:"pageSize"`
	Total     int64             `json:"total"`
}

type ListBillingAddressesPageRequest struct {
	NameLike  []string `form:"nameLike,optional"`
	OrderBy   string   `form:"orderBy,optional"`
	PageIndex int      `form:"pageIndex,optional"`
	PageSize  int      `form:"pageSize,optional"`
}

type ListCartItemsPageReply struct {
	List      []*CartItem `json:"list"`
	PageIndex int         `json:"pageIndex"`
	PageSize  int         `json:"pageSize"`
	Total     int64       `json:"total"`
}

type ListCartItemsPageRequest struct {
	PageIndex int `form:"pageIndex,optional"`
	PageSize  int `form:"pageSize,optional"`
}

type ListCategoryTreeReply struct {
	ProductCategories []*Category `json:"tree"`
}

type ListCategoryTreeRequest struct {
	CategoryPId  int      `form:"categoryPId,optional"`
	NeedChildren bool     `form:"needChildren,optional"`
	Names        []string `form:"name,optional"`
	OrderBy      string   `form:"orderBy,optional"`
}

type ListCustomersPageReply struct {
	List      []Customer `json:"list,optional"`
	PageIndex int        `json:"pageIndex,optional"`
	PageSize  int        `json:"pageSize,optional"`
	Total     int64      `json:"total,optional"`
}

type ListCustomersPageRequest struct {
	LikeName   string `form:"likeName,optional"`
	LikeMobile string `form:"likeMobile,optional"`
	Sources    []int  `form:"sources,optional"`
	Statuses   []int  `form:"statuses,optional"`
	OrderBy    string `form:"orderBy,optional"`
	PageIndex  int    `form:"pageIndex,optional"`
	PageSize   int    `form:"pageSize,optional"`
}

type ListDeliveryAddressesPageReply struct {
	List      []*DeliveryAddress `json:"list"`
	PageIndex int                `json:"pageIndex"`
	PageSize  int                `json:"pageSize"`
	Total     int64              `json:"total"`
}

type ListDeliveryAddressesPageRequest struct {
	NameLike  []string `form:"nameLike,optional"`
	OrderBy   string   `form:"orderBy,optional"`
	PageIndex int      `form:"pageIndex,optional"`
	PageSize  int      `form:"pageSize,optional"`
}

type ListDictionaryItemsReply struct {
	List []DictionaryItem `json:"list"`
}

type ListDictionaryItemsRequest struct {
	Type      string `form:"type"`
	PageIndex int    `form:"pageIndex,optional"`
	PageSize  int    `form:"pageSize,optional"`
}

type ListDictionaryTypesPageReply struct {
	List      []DictionaryType `json:"list"`
	PageIndex int              `json:"pageIndex"`
	PageSize  int              `json:"pageSize"`
	Total     int64            `json:"total"`
}

type ListDictionaryTypesPageRequest struct {
	PageIndex int `form:"pageIndex,optional"`
	PageSize  int `form:"pageSize,optional"`
}

type ListLeadsPageReply struct {
	List      []Lead `json:"list,optional"`
	PageIndex int    `json:"pageIndex,optional"`
	PageSize  int    `json:"pageSize,optional"`
	Total     int64  `json:"total,optional"`
}

type ListLeadsPageRequest struct {
	LikeName   string `form:"likeName,optional"`
	LikeMobile string `form:"likeMobile,optional"`
	Sources    []int  `form:"sources,optional"`
	Statuses   []int  `form:"statuses,optional"`
	OrderBy    string `form:"orderBy,optional"`
	PageIndex  int    `form:"pageIndex,optional"`
	PageSize   int    `form:"pageSize,optional"`
}

type ListMGMRulesPageReply struct {
	List      []*MGMRule `json:"list"`
	PageIndex int        `json:"pageIndex"`
	PageSize  int        `json:"pageSize"`
	Total     int64      `json:"total"`
}

type ListMGMRulesPageRequest struct {
	MGMRuleTypes []int8   `form:"mgmTypes,optional"`
	Keys         []string `form:"keys,optional"`
	OrderBy      string   `form:"orderBy,optional"`
	PageIndex    int      `form:"pageIndex,optional"`
	PageSize     int      `form:"pageSize,optional"`
}

type ListMediaResourcesPageReply struct {
	List      []MediaResource `json:"list,optional"`
	PageIndex int             `json:"pageIndex,optional"`
	PageSize  int             `json:"pageSize,optional"`
	Total     int64           `json:"total,optional"`
}

type ListMediaResourcesPageRequest struct {
	LikeName  string `form:"likeName,optional"`
	OrderBy   string `form:"orderBy,optional"`
	PageIndex int    `form:"pageIndex,optional"`
	PageSize  int    `form:"pageSize,optional"`
}

type ListMediasPageReply struct {
	List      []*Media `json:"list"`
	PageIndex int      `json:"pageIndex"`
	PageSize  int      `json:"pageSize"`
	Total     int64    `json:"total"`
}

type ListMediasPageRequest struct {
	MediaTypes []int8   `form:"mediaTypes,optional"`
	Keys       []string `form:"keys,optional"`
	OrderBy    string   `form:"orderBy,optional"`
	PageIndex  int      `form:"pageIndex,optional"`
	PageSize   int      `form:"pageSize,optional"`
}

type ListOrdersPageReply struct {
	List      []*Order `json:"list"`
	PageIndex int      `json:"pageIndex"`
	PageSize  int      `json:"pageSize"`
	Total     int64    `json:"total"`
}

type ListOrdersPageRequest struct {
	TypeIds   []int  `form:"typeIds,optional,omitempty"`
	StatusIds []int  `form:"statusIds,optional,omitempty"`
	Name      string `form:"name,optional,omitempty"`
	StartAt   string `form:"startAt,optional,omitempty"`
	EndAt     string `form:"endAt,optional,omitempty"`
	OrderBy   string `form:"orderBy,optional,omitempty"`
	PageIndex int    `form:"pageIndex,optional,omitempty"`
	PageSize  int    `form:"pageSize,optional,omitempty"`
}

type ListPaymentsPageReply struct {
	List      []*Payment `json:"list"`
	PageIndex int        `json:"pageIndex"`
	PageSize  int        `json:"pageSize"`
	Total     int64      `json:"total"`
}

type ListPaymentsPageRequest struct {
	PaymentType string   `form:"paymentType,optional"`
	Keys        []string `form:"keys,optional"`
	OrderBy     string   `form:"orderBy,optional"`
	PageIndex   int      `form:"pageIndex,optional"`
	PageSize    int      `form:"pageSize,optional"`
}

type ListPluginFrontendRoutesReply struct {
	Routes []PluginWebRoutes `json:"routes"`
}

type ListPluginReply struct {
	Plugins []PluginWebInfo `json:"plugins"`
}

type ListPluginRequest struct {
	Socpe []string `form:"scope"`
}

type ListPositionsReply struct {
	List []Position `json:"list"`
}

type ListPositionsRequest struct {
	LikeName string `query:"likeName,optional"`
}

type ListPriceBookEntriesPageReply struct {
	List      []*PriceBookEntry `json:"list"`
	PageIndex int               `json:"pageIndex"`
	PageSize  int               `json:"pageSize"`
	Total     int64             `json:"total"`
}

type ListPriceBookEntriesPageRequest struct {
	LikeName    string `form:"likeName,optional"`
	PriceBookId int64  `form:"priceBookId,optional"`
	ProductId   int64  `form:"productId,optional"`
	SkuId       int64  `form:"skuId,optional"`
	PageIndex   int    `form:"pageIndex,optional"`
	PageSize    int    `form:"pageSize,optional"`
}

type ListPriceBooksPageReply struct {
	List      []PriceBook `json:"list"`
	PageIndex int         `json:"pageIndex"`
	PageSize  int         `json:"pageSize"`
	Total     int64       `json:"total"`
}

type ListPriceBooksPageRequest struct {
	LikeName  string `json:"likeName,optional"`
	StoreId   int64  `json:"storeId,optional"`
	PageIndex int    `form:"pageIndex,optional"`
	PageSize  int    `form:"pageSize,optional"`
}

type ListProductCategoriesReply struct {
	ProductCategories []*ProductCategory `json:"list"`
}

type ListProductCategoriesRequest struct {
	CategoryPId  int  `form:"categoryPId,optional"`
	NeedChildren bool `form:"needChildren,optional"`
	Limit        int  `form:"limit,optional"`
}

type ListProductCategoryTreeReply struct {
	ProductCategories []*ProductCategory `json:"tree"`
}

type ListProductCategoryTreeRequest struct {
	CategoryPId  int      `form:"categoryPId,optional"`
	NeedChildren bool     `form:"needChildren,optional"`
	Names        []string `form:"name,optional"`
	OrderBy      string   `form:"orderBy,optional"`
}

type ListProductSpecificPageReply struct {
	List      []*ProductSpecific `json:"list"`
	PageIndex int                `json:"pageIndex"`
	PageSize  int                `json:"pageSize"`
	Total     int64              `json:"total"`
}

type ListProductSpecificPageRequest struct {
	LikeName  string `form:"likeName,optional"`
	ProductId int64  `form:"productId"`
	OrderBy   string `form:"orderBy,optional"`
	PageIndex int    `form:"pageIndex,optional"`
	PageSize  int    `form:"pageSize,optional"`
}

type ListProductStatisticsPageReply struct {
	List      []*ProductStatistics `json:"list"`
	PageIndex int                  `json:"pageIndex"`
	PageSize  int                  `json:"pageSize"`
	Total     int64                `json:"total"`
}

type ListProductStatisticsPageRequest struct {
	LikeName  string `form:"likeName,optional"`
	ProductId int64  `form:"productId"`
	OrderBy   string `form:"orderBy,optional"`
	PageIndex int    `form:"pageIndex,optional"`
	PageSize  int    `form:"pageSize,optional"`
}

type ListProductsPageReply struct {
	List      []Product `json:"list"`
	PageIndex int       `json:"pageIndex"`
	PageSize  int       `json:"pageSize"`
	Total     int64     `json:"total"`
}

type ListProductsPageRequest struct {
	LikeName           string   `form:"likeName,optional"`
	ProductTypeIds     []int    `form:"typeIds,optional"`
	ProductStatusIds   []int    `form:"productStatusIds,optional"`
	SalesStartAt       string   `form:"salesStartAt,optional,omitempty"`
	SalesEndAt         string   `form:"salesEndAt,optional,omitempty"`
	Keys               []string `form:"keys,optional"`
	ProductCategoryId  int      `form:"productCategoryId,optional"`
	ProductCategoryIds []int    `form:"productCategoryIds,optional"`
	OrderBy            string   `form:"orderBy,optional"`
	PageIndex          int      `form:"pageIndex,optional"`
	PageSize           int      `form:"pageSize,optional"`
}

type ListRegisterCodesPageReply struct {
	List      []RegisterCode `json:"list,optional"`
	PageIndex int            `json:"pageIndex,optional"`
	PageSize  int            `json:"pageSize,optional"`
	Total     int64          `json:"total,optional"`
}

type ListRegisterCodesPageRequest struct {
	LikeName   string `form:"likeName,optional"`
	LikeMobile string `form:"likeMobile,optional"`
	Sources    []int  `form:"sources,optional"`
	Statuses   []int  `form:"statuses,optional"`
	OrderBy    string `form:"orderBy,optional"`
	PageIndex  int    `form:"pageIndex,optional"`
	PageSize   int    `form:"pageSize,optional"`
}

type ListRolesReply struct {
	List []AdminRole `json:"list"`
}

type ListSKUPageReply struct {
	List      []*SKU `json:"list"`
	PageIndex int    `json:"pageIndex"`
	PageSize  int    `json:"pageSize"`
	Total     int64  `json:"total"`
}

type ListSKUPageRequest struct {
	LikeName  string `form:"likeName,optional"`
	ProductId int64  `form:"productId"`
	OrderBy   string `form:"orderBy,optional"`
	PageIndex int    `form:"pageIndex,optional"`
	PageSize  int    `form:"pageSize,optional"`
}

type ListShippingAddressesPageReply struct {
	List      []*ShippingAddress `json:"list"`
	PageIndex int                `json:"pageIndex"`
	PageSize  int                `json:"pageSize"`
	Total     int64              `json:"total"`
}

type ListShippingAddressesPageRequest struct {
	NameLike  []string `form:"nameLike,optional"`
	OrderBy   string   `form:"orderBy,optional"`
	PageIndex int      `form:"pageIndex,optional"`
	PageSize  int      `form:"pageSize,optional"`
}

type ListStoresPageReply struct {
	List      []*Store `json:"list"`
	PageIndex int      `json:"pageIndex"`
	PageSize  int      `json:"pageSize"`
	Total     int64    `json:"total"`
}

type ListStoresPageRequest struct {
	Ids       []int64 `form:"ids,optional"`
	LikeName  string  `form:"likeName,optional"`
	OrderBy   string  `form:"orderBy,optional"`
	PageIndex int     `form:"pageIndex,optional"`
	PageSize  int     `form:"pageSize,optional"`
}

type ListTagTreeReply struct {
	Tags []*Tag `json:"tree"`
}

type ListTagTreeRequest struct {
	TagPId       int      `form:"tagPId,optional"`
	NeedChildren bool     `form:"needChildren,optional"`
	Names        []string `form:"name,optional"`
	OrderBy      string   `form:"orderBy,optional"`
}

type ListUsersReply struct {
	List      []User `json:"list"`
	PageIndex int    `json:"pageIndex"`
	PageSize  int    `json:"pageSize"`
	Total     int64  `json:"total"`
}

type ListUsersRequest struct {
	Ids             []int64  `form:"ids,optional"`
	LikeName        string   `form:"likeName,optional"`
	LikeEmail       string   `form:"likeEmail,optional"`
	DepIds          []int64  `form:"depIds,optional"`
	PositionIds     []int64  `form:"positionIds,optional"`
	LikePhoneNumber string   `form:"likePhoneNumber,optional"`
	RoleCodes       []string `form:"roleCodes,optional"`
	IsEnabled       *bool    `form:"isEnable,optional"`
	PageIndex       int      `form:"pageIndex,optional"`
	PageSize        int      `form:"pageSize,optional"`
}

type ListWeWorkDepartmentReply struct {
	List      []*WeWorkDepartment `json:"list"`
	PageIndex int                 `json:"pageIndex"`
	PageSize  int                 `json:"pageSize"`
	Total     int64               `json:"total"`
}

type ListWeWorkDepartmentReqeust struct {
	WeWorkDepId    int    `json:"weWorkDepId,optional"`
	Name           string `json:"name,optional"`
	NameEn         string `json:"nameEn,optional"`
	WeWorkParentId int    `json:"weWorkParentId,optional"`
	Order          int    `json:"order,optional"`
	PageIndex      int    `form:"pageIndex,optional"`
	PageSize       int    `form:"pageSize,optional"`
}

type ListWeWorkGroupQrcodeActiveReqeust struct {
	UserId    string `json:"userId,optional"` // 所属人
	Name      string `json:"name,optional"`   // 活码名称
	Qid       string `json:"qid,optional"`    // 唯一标识
	State     int    `json:"state,optional"`  // 状态1：启用 2：禁用 3：删除
	PageIndex int    `form:"pageIndex,optional"`
	PageSize  int    `form:"pageSize,optional"`
}

type ListWeWorkQrcodeActiveReply struct {
	List      []*WeWorkQrcodeActive `json:"list"`
	PageIndex int                   `json:"pageIndex"`
	PageSize  int                   `json:"pageSize"`
	Total     int64                 `json:"total"`
}

type ListWeWorkResourceImageReply struct {
	List      []*Resource `json:"list"`
	PageIndex int         `json:"pageIndex"`
	PageSize  int         `json:"pageSize"`
	Total     int64       `json:"total"`
}

type ListWeWorkResourceImageRequest struct {
	ResourceType string `json:"resourceType,optional"`
	PageIndex    int    `form:"pageIndex,optional"`
	PageSize     int    `form:"pageSize,optional"`
}

type ListWeWorkTagGroupPageReply struct {
	List      []*GroupWithTag `json:"list"`
	PageIndex int             `json:"pageIndex"`
	PageSize  int             `json:"pageSize"`
	Total     int64           `json:"total"`
}

type ListWeWorkTagGroupPageRequest struct {
	GroupId   string `json:"groupId,optional"`
	GroupName string `json:"groupName,optional"`
	PageIndex int    `form:"pageIndex,optional"`
	PageSize  int    `form:"pageSize,optional"`
}

type ListWeWorkTagGroupReply struct {
	List []*WeWorkTagGroup `json:"list"`
}

type ListWeWorkTagOptionReply struct {
	List interface{} `json:"list"`
}

type ListWeWorkTagReply struct {
	List      []*WeWorkTag `json:"list"`
	PageIndex int          `json:"pageIndex"`
	PageSize  int          `json:"pageSize"`
	Total     int64        `json:"total"`
}

type ListWeWorkTagReqeust struct {
	TagIds    []string `json:"tagIds,optional"`
	GroupIds  []string `json:"groupIds,optional"`
	Name      string   `json:"name,optional"`
	Sync      int      `from:"sync,optional"`
	PageIndex int      `form:"pageIndex,optional"`
	PageSize  int      `form:"pageSize,optional"`
}

type ListWeWorkUserReply struct {
	List      []*WechatUser `json:"list"`
	PageIndex int           `json:"pageIndex"`
	PageSize  int           `json:"pageSize"`
	Total     int64         `json:"total"`
}

type ListWeWorkUserReqeust struct {
	Id                     int64  `json:"id,optional"`                     // 微信员工ID
	Name                   string `json:"name,optional"`                   // 微信员工名称
	Alias                  string `json:"alias,optional"`                  // 微信员工别称
	Email                  string `json:"email,optional"`                  // 微信员工Email
	Mobile                 string `json:"mobile,optional"`                 // 微信员工手机号
	OpenUserId             string `json:"openUserId,optional"`             // openID
	WeWorkMainDepartmentId int64  `json:"weWorkMainDepartmentId,optional"` // 微信员工所属部门
	Status                 int    `json:"status,optional"`                 // 状态
	PageIndex              int    `form:"pageIndex,optional"`
	PageSize               int    `form:"pageSize,optional"`
}

type LoginReply struct {
	Token        string `json:"token"`
	RefreshToken string `json:"refreshToken"`
}

type LoginRequest struct {
	UserName    string `json:"userName,optional"`
	PhoneNumber string `json:"phoneNumber,optional"`
	Email       string `json:"email,optional"`
	Password    string `json:"password"`
}

type Logistics struct {
	OrderId               int64  `json:"orderId,optional"`
	Status                string `json:"status,optional"`
	TrackingCode          string `json:"trackingCode,optional"`
	Carrier               string `json:"carrier,optional"`
	EstimatedDeliveryDate string `json:"estimatedDeliveryDate,optional"`
	ActualDeliveryDate    string `json:"actualDeliveryDate,optional"`
}

type MGMRule struct {
	Id              int64   `json:"id,optional"`
	Name            string  `json:"name,optional"`
	CommissionRate1 float32 `json:"commissionRate1,optional"`
	CommissionRate2 float32 `json:"commissionRate2,optional"`
	Scene           int     `json:"scene,optional"`
	Description     string  `json:"description,optional"`
}

type MPCustomerAuthRequest struct {
	Code          string `json:"code"`
	IV            string `json:"iv"`
	EncryptedData string `json:"encryptedData"`
}

type MPCustomerLoginAuthReply struct {
	OpenId      string  `json:"openId"`
	UnionId     string  `json:"unionId"`
	PhoneNumber string  `json:"phoneNumber"`
	NickName    string  `json:"nickName"`
	AvatarURL   string  `json:"avatarURL"`
	Gender      string  `json:"gender"`
	Token       MPToken `json:"token"`
}

type MPCustomerLoginRequest struct {
	Code string `json:"code"`
}

type MPToken struct {
	TokenType    string `json:"tokenType"`
	ExpiresIn    string `json:"expiresIn"`
	AccessToken  string `json:"accessToken"`
	RefreshToken string `json:"refreshToken"`
}

type MPValidTokenReply struct {
	Valid  bool   `json:"valid"`
	Reason string `json:"reason"`
}

type MPValidTokenRequest struct {
	Token string `form:"token"`
}

type MatchRule struct {
	TagId    string `json:"tag_id,optional"`
	Sex      string `json:"sex,optional"`
	Country  string `json:"country,optional"`
	Province string `json:"province,optional"`
	City     string `json:"city,optional"`
	Language string `json:"language,optional"`
}

type Media struct {
	Id             int64            `json:"id,optional"`
	Title          string           `json:"title,optional"`
	SubTitle       string           `json:"subTitle,optional"`
	CoverImageId   int64            `json:"coverImageId,optional"`
	ResourceUrl    string           `json:"resourceUrl,optional"`
	Description    string           `json:"description,optional"`
	MediaType      int              `json:"mediaType,optional"`
	ViewedCount    int              `json:"viewedCount,optional"`
	CoverImage     *MediaResource   `json:"coverImage,optional"`
	DetailImageIds []int64          `json:"detailImageIds,optional"`
	DetailImages   []*MediaResource `json:"detailImages,optional"`
}

type MediaResource struct {
	Id            int64  `json:"id,optional"`
	CustomerId    int64  `json:"customerId,optional"`
	Filename      string `json:"filename,optional"`
	Size          int64  `json:"size,optional"`
	Url           string `json:"url,optional"`
	BucketName    string `json:"bucketName,optional"`
	IsLocalStored bool   `json:"isLocalStored,optional"`
	ContentType   string `json:"contentType,optional"`
	ResourceType  string `json:"resourceType,optional"`
	SortIndex     int    `json:"sortIndex,optional"`
}

type Membership struct {
	Id               int64  `json:"id,optional"`
	Name             string `json:"name,optional"`
	MainMembershipId int64  `json:"mainMembershipId,optional"`
	OrderId          int64  `json:"orderId,optional"`
	OrderItemId      int64  `json:"orderItemId,optional"`
	CustomerId       int64  `json:"customerId,optional"`
	ProductId        int64  `json:"productId,optional"`
	StartDate        string `json:"startDate,optional"`
	EndDate          string `json:"endDate,optional"`
	Status           int    `json:"status,optional"`
	Type             int    `json:"type,optional"`
	ExtendPeriod     bool   `json:"extendPeriod,optional"`
	Plan             int    `json:"plan,optional"`
}

type MenuRoles struct {
	MenuName       string   `json:"menuName"`
	AllowRoleCodes []string `json:"allowRoleCodes"`
}

type ModifyPasswordReqeust struct {
	Password string `json:"password"`
}

type OAButton struct {
	Name        string         `json:"name,optional"`
	Type        string         `json:"type,optional"`
	Key         string         `json:"key,omitempty,optional"`
	Url         string         `json:"url,omitempty,optional"`
	AppID       string         `json:"appid,omitempty,optional"`
	PagePath    string         `json:"pagepath,omitempty,optional"`
	OASubButton []*OASubButton `json:"sub_button,optional"`
	Id          int            `json:"id,optional"`
}

type OACustomerAuthRequest struct {
	Code          string `json:"code"`
	IV            string `json:"iv"`
	EncryptedData string `json:"encryptedData"`
}

type OACustomerLoginAuthReply struct {
	OpenId      string  `json:"openId"`
	UnionId     string  `json:"unionId"`
	PhoneNumber string  `json:"phoneNumber"`
	NickName    string  `json:"nickName"`
	AvatarURL   string  `json:"avatarURL"`
	Gender      string  `json:"gender"`
	Token       OAToken `json:"token"`
}

type OACustomerLoginRequest struct {
	Code string `json:"code"`
}

type OAMenu struct {
	Id        int64       `json:"id,optional"`
	OAButton  []*OAButton `json:"button,optional"`
	MatchRule *MatchRule  `json:"matchrule,optional"`
}

type OASubButton struct {
	Name     string `json:"name,optional"`
	Id       int    `json:"id,optional"`
	Type     string `json:"type,optional"`
	Key      string `json:"key,omitempty,optional"`
	Url      string `json:"url,omitempty,optional"`
	AppID    string `json:"appid,omitempty,optional"`
	PagePath string `json:"pagepath,omitempty,optional"`
}

type OAToken struct {
	TokenType    string `json:"tokenType"`
	ExpiresIn    string `json:"expiresIn"`
	AccessToken  string `json:"accessToken"`
	RefreshToken string `json:"refreshToken"`
}

type Opportunity struct {
	Id          int64   `json:"id"`
	Name        string  `json:"name"`
	Requirement string  `json:"requirement"`
	CustomerId  int64   `json:"customerId"`
	Probability float32 `json:"probability"`
	Source      string  `json:"source"`
	Type        string  `json:"type"`
	UserId      int64   `json:"userId"`
	Stage       string  `json:"stage"`
	ClosedDate  string  `json:"closedDate"`
	CreatedAt   string  `json:"createdAt"`
	UpdatedAt   string  `json:"updatedAt"`
}

type Order struct {
	Id             int64        `json:"id,optional"`
	CustomerId     int64        `json:"customerId,optional"`
	CartId         int64        `json:"cartId,optional"`
	PaymentType    int          `json:"paymentType,optional"`
	Type           int          `json:"type,optional"`
	Status         int          `json:"status,optional"`
	OrderNumber    string       `json:"orderNumber,optional"`
	Discount       float64      `json:"discount,optional"`
	ListPrice      float64      `json:"listPrice,optional"`
	UnitPrice      float64      `json:"unitPrice,optional"`
	Comment        string       `json:"comment,optional"`
	CompletedAt    string       `json:"completedAt,optional,omitempty"`
	CancelledAt    string       `json:"cancelledAt,optional,omitempty"`
	ShippingMethod string       `json:"shippingMethod,optional,omitempty"`
	CreatedAt      string       `json:"createdAt,optional,omitempty"`
	OrderItems     []*OrderItem `json:"orderItems,optional"`
	Payments       []*Payment   `json:"payments,optional"`
	Logistics      *Logistics   `json:"logistics,optional"`
}

type OrderItem struct {
	Id               int64          `json:"id,optional"`
	OrderId          int64          `json:"orderId,optional"`
	PriceBookEntryId int64          `json:"priceBookEntryId,optional"`
	CustomerId       int64          `json:"customerId,optional"`
	Type             int            `json:"type,optional"`
	Status           int            `json:"status,optional"`
	Quantity         int            `json:"quantity,optional"`
	UnitPrice        float64        `json:"unitPrice,optional"`
	ListPrice        float64        `json:"listPrice,optional"`
	SellingPrice     float64        `json:"sellingPrice,optional"`
	CoverImage       *MediaResource `json:"coverImage,optional"`
	ProductName      string         `json:"productName,optional"`
	SkuNo            string         `json:"skuNo,optional"`
}

type OwnerFilter struct {
	UseridList []string `json:"useridList,optional"`
}

type PatchBillingAddressReply struct {
	BillingAddress *BillingAddress `json:"billingAddress"`
}

type PatchBillingAddressRequest struct {
	BillingAddressId int64           `path:"id"`
	BillingAddress   *BillingAddress `json:"billingAddress"`
}

type PatchCategoryReply struct {
	Category
}

type PatchCategoryRequest struct {
	Id  int64 `path:"id"`
	PId int64 `json:"pId"`
}

type PatchCustomerReply struct {
	*Customer
}

type PatchCustomerRequest struct {
	CustomerId  int64  `path:"id"`
	Name        string `json:"name,optional"`
	Email       string `json:"email,optional"`
	InviterId   int64  `json:"inviterId,optional"`
	Source      int    `json:"source,optional"`
	Type        int    `json:"type,optional"`
	IsActivated bool   `json:"isActivated,optional,omitempty"`
}

type PatchDeliveryAddressReply struct {
	DeliveryAddress *DeliveryAddress `json:"deliveryAddress"`
}

type PatchDeliveryAddressRequest struct {
	DeliveryAddressId int64            `path:"id"`
	DeliveryAddress   *DeliveryAddress `json:"deliveryAddress"`
}

type PatchDepartmentReply struct {
	*Department
}

type PatchDepartmentRequest struct {
	Id          int64  `path:"id"`
	DepName     string `json:"depName,optional"`
	LeaderId    int64  `json:"leaderId,optional"`
	PId         int64  `json:"pId,optional"`
	Desc        string `json:"desc,optional"`
	PhoneNumber string `json:"phoneNumber,optional"`
	Email       string `json:"email,optional"`
	Remark      string `json:"remark,optional"`
}

type PatchLeadReply struct {
	*Lead
}

type PatchLeadRequest struct {
	LeadId      int64  `path:"id"`
	Name        string `json:"name,optional"`
	Email       string `json:"email,optional"`
	InviterId   int64  `json:"inviterId,optional"`
	Source      int    `json:"source,optional"`
	Type        int    `json:"type,optional"`
	IsActivated bool   `json:"isActivated,optional,omitempty"`
}

type PatchOrderReply struct {
	*Order
}

type PatchOrderRequest struct {
	OrderId int64 `path:"id"`
	Order
}

type PatchPaymentReply struct {
	*Payment
}

type PatchPaymentRequest struct {
	PaymentId int64 `path:"id"`
	Payment
}

type PatchPositionReply struct {
	*Position
}

type PatchPositionRequest struct {
	Id        int64    `path:"id"`
	Name      string   `json:"name,optional"`
	Desc      string   `json:"desc,optional"`
	Level     string   `json:"level,optional"`
	RoleCodes []string `json:"roleCodes,optional"`
}

type PatchProductCategoryReply struct {
	ProductCategory
}

type PatchProductCategoryRequest struct {
	Id  int64 `path:"id"`
	PId int64 `json:"pId"`
}

type PatchProductReply struct {
	*Product
}

type PatchProductRequest struct {
	ProductId int64 `path:"id"`
	Product
}

type PatchProductSpecificReply struct {
	*ProductSpecific
}

type PatchProductSpecificRequest struct {
	ProductSpecificId int64 `path:"id"`
	ProductSpecific
}

type PatchProductStatisticsReply struct {
	*ProductStatistics
}

type PatchProductStatisticsRequest struct {
	ProductStatisticsId int64 `path:"id"`
	ProductStatistics
}

type PatchRegisterCodeReply struct {
	*RegisterCode
}

type PatchRegisterCodeRequest struct {
	RegisterCodeId int64  `path:"id"`
	Name           string `json:"name,optional"`
	Email          string `json:"email,optional"`
	InviterId      int64  `json:"inviterId,optional"`
	Source         int    `json:"source,optional"`
	Type           int    `json:"type,optional"`
	IsActivated    bool   `json:"isActivated,optional,omitempty"`
}

type PatchRoleReply struct {
	*AdminRole
}

type PatchRoleReqeust struct {
	RoleCode  string   `path:"roleCode"`
	Name      string   `json:"name"`
	Desc      string   `json:"desc,optional"`
	APIIds    []int64  `json:"apiIds,optional"`
	MenuNames []string `json:"menuNames,optional"`
}

type PatchSKUReply struct {
	*SKU
}

type PatchSKURequest struct {
	SKUId int64 `path:"id"`
	SKU
}

type PatchShippingAddressReply struct {
	*ShippingAddress
}

type PatchShippingAddressRequest struct {
	ShippingAddressId int64 `path:"id"`
	ShippingAddress
}

type PatchTagReply struct {
	Tag
}

type PatchTagRequest struct {
	Id  int64 `path:"id"`
	PId int64 `json:"pId"`
}

type Payment struct {
	Id              int64          `json:"id,optional"`
	OrderId         int64          `json:"orderId,optional"`
	PaymentDate     string         `json:"paymentDate,optional"`
	PaymentType     int            `json:"paymentType,optional"`
	PaidAmount      float64        `json:"paidAmount,optional"`
	PaymentNumber   string         `json:"paymentNumber,optional"`
	ReferenceNumber string         `json:"referenceNumber,optional"`
	Status          int            `json:"status,optional"`
	PaymentItems    []*PaymentItem `json:"paymentItems,optional"`
}

type PaymentItem struct {
	Id                  int64   `json:"id,optional"`
	PaymentID           int64   `json:"paymentID,optional"`
	Quantity            int     `json:"quantity,optional"`
	UnitPrice           float64 `json:"unitPrice,optional"`
	PaymentCustomerName string  `json:"paymentCustomerName,optional"`
	BankInformation     string  `json:"bankInformation,optional"`
	BankResponseCode    string  `json:"bankResponseCode,optional"`
	CarrierType         string  `json:"carrierType,optional"`
	CreditCardNumber    string  `json:"creditCardNumber,optional"`
	DeductMembershipId  string  `json:"deductMembershipId,optional"`
	DeductionPoint      int32   `json:"deductionPoint,optional"`
	InvoiceCreateTime   string  `json:"invoiceCreateTime,optional"`
	InvoiceNumber       string  `json:"invoiceNumber,optional"`
	InvoiceTotalAmount  float64 `json:"invoiceTotalAmount,optional"`
	TaxIdNumber         string  `json:"taxIdNumber,optional"`
}

type PivotDataDictionaryToObject struct {
	DataDictionaryType string `json:"dataDictionaryType,optional"`
	DataDictionaryKey  string `json:"dataDictionaryKey,optional"`
}

type PlatformAuthRequest struct {
	AccessKey string `json:"accessKey"`
	SecretKey string `json:"secretKey"`
}

type PlatformAuthResponse struct {
	TokenType    string `json:"tokenType"`
	ExpiresIn    string `json:"expiresIn"`
	AccessToken  string `json:"accessToken"`
	RefreshToken string `json:"refreshToken"`
}

type PluginWebInfo struct {
	Name      string  `json:"name"`
	Desc      string  `json:"desc"`
	Verison   string  `json:"version"`
	IsEnabled bool    `json:"isEnabled"`
	Routes    []Route `json:"routes"`
}

type PluginWebRouteMeta struct {
	Locale      string `json:"locale"`
	Icon        string `json:"icon"`
	RequestAuth bool   `json:"requestAuth"`
}

type PluginWebRoutes struct {
	Name     string             `json:"name"`
	Path     string             `json:"path"`
	Meta     PluginWebRouteMeta `json:"meta"`
	Children []PluginWebRoutes  `json:"children"`
}

type Position struct {
	Id        int64    `json:"id"`
	Name      string   `json:"name"`
	Desc      string   `json:"desc"`
	Level     string   `json:"level"`
	RoleCodes []string `json:"roleCodes"`
}

type PriceBook struct {
	Id          int64  `json:"id,optional"`
	IsStandard  bool   `json:"isStandard,optional"`
	Name        string `json:"name"`
	Description string `json:"description,optional"`
	StoreId     int64  `json:"storeId,optional"`
	CreatedAt   string `json:"createdAt,optional"`
}

type PriceBookEntry struct {
	Id            int64             `json:"id,optional"`
	UniqueID      string            `json:"uniqueID,optional"`
	PriceBookId   int64             `json:"priceBookId"`
	ProductId     int64             `json:"productId"`
	SkuId         int64             `json:"skuId,optional"`
	UnitPrice     float64           `json:"unitPrice"`
	ListPrice     float64           `json:"listPrice,optional"`
	IsActive      bool              `json:"isActive, optional"`
	PriceConfigs  []*PriceConfig    `json:"priceConfigs, optional"`
	SKUEntries    []*PriceBookEntry `json:"skuEntries, optional"`
	PriceBookName string            `json:"priceBookName,optional"`
	ProductName   string            `json:"productName,optional"`
	SPU           string            `json:"spu,optional"`
	Discount      float32           `json:"discount,optional"`
}

type PriceBookEntrySpecific struct {
	Inventory int16   `json:"inventory,optional"`
	Weight    float32 `json:"weight,optional"`
	Volume    float32 `json:"volume,optional"`
	Encode    string  `json:"encode,optional"`
	BarCode   string  `json:"barCode,optional"`
	Extra     string  `json:"extra,optional"`
}

type PriceConfig struct {
	Discount         float32 `json:"discount,optional"`
	Price            float64 `json:"price,optional"`
	Days             int8    `json:"days,optional"`
	Type             int8    `json:"type,optional"`
	PriceBookEntryId int64   `json:"priceBookEntryId,optional"`
	StartDate        string  `json:"startDate,optional"`
	EndDate          string  `json:"endDate,optional"`
}

type Product struct {
	Id                      int64                          `json:"id,optional"`
	Name                    string                         `json:"name"`
	SPU                     string                         `json:"spu"`
	Type                    int                            `json:"type"`
	Plan                    int                            `json:"plan"`
	AccountingCategory      string                         `json:"accountingCategory"`
	CanSellOnline           bool                           `json:"canSellOnline,optional"`
	CanUseForDeduct         bool                           `json:"canUseForDeduct,optional"`
	Description             string                         `json:"description,optional"`
	AllowedSellQuantity     int                            `json:"allowedSellQuantity,optional"`
	ValidityPeriodDays      int                            `json:"validityPeriodDays,optional"`
	SaleStartDate           string                         `json:"saleStartDate,optional"`
	SaleEndDate             string                         `json:"saleEndDate,optional"`
	ApprovalStatus          int                            `json:"approvalStatus,optional"`
	IsActivated             bool                           `json:"isActivated,optional,omitempty"`
	Sort                    int                            `json:"sort,optional,omitempty"`
	CreatedAt               string                         `json:"createdAt,optional"`
	ProductSpecifics        []*ProductSpecific             `json:"productSpecifics,optional"`
	PivotSalesChannels      []*PivotDataDictionaryToObject `json:"pivotSalesChannels,optional"`
	PivotPromoteChannels    []*PivotDataDictionaryToObject `json:"pivotPromoteChannels,optional"`
	ProductCategories       []*ProductCategory             `json:"productCategories,optional"`
	SalesChannelsItemIds    []int64                        `json:"salesChannelsItemIds,optional"`
	PromoteChannelsItemIds  []int64                        `json:"promoteChannelsItemIds,optional"`
	CategoryIds             []int64                        `json:"categoryIds,optional"`
	CoverImageIds           []int64                        `json:"coverImageIds,optional"`
	CoverImages             []*MediaResource               `json:"coverImages,optional"`
	CoverImageIdSortIndexs  []*SortIdItem                  `json:"coverImageIdSortIndexes,optional"`
	DetailImageIds          []int64                        `json:"detailImageIds,optional"`
	DetailImages            []*MediaResource               `json:"detailImages,optional"`
	DetailImageIdSortIndexs []*SortIdItem                  `json:"detailImageIdSortIndexes,optional"`
	ActivePriceEntry        *ActivePriceEntry              `json:"activePriceBookEntry,optional"`
	PriceBookEntries        []*PriceBookEntry              `json:"priceBookEntries,optional"`
	SKUs                    []*SKU                         `json:"skus,optional"`
	*ProductAttribute
	ViewedCount int `json:"viewedCount,optional"`
}

type ProductAttribute struct {
	Id         int64   `json:"id,optional"`
	Inventory  int16   `json:"inventory,optional"`
	SoldAmount int16   `json:"soldAmount,optional"`
	Weight     float32 `json:"weight,optional"`
	Volume     float32 `json:"volume,optional"`
	Encode     string  `json:"encode,optional"`
	BarCode    string  `json:"barCode,optional"`
	Extra      string  `json:"extra,optional"`
}

type ProductCategory struct {
	Id          int64  `json:"id,optional"`
	PId         int64  `json:"pId"`
	Name        string `json:"name"`
	Sort        int    `json:"sort"`
	ViceName    string `json:"viceName"`
	Description string `json:"description"`
	CreatedAt   string `json:"createdAt,optional"`
	ImageAbleInfo
	CoverImageId int64              `json:"coverImageId,optional"`
	CoverImage   *MediaResource     `json:"coverImage,optional"`
	Children     []*ProductCategory `json:"children,optional"`
}

type ProductSpecific struct {
	Id              int64             `json:"id,optional"`
	ProductId       int64             `json:"productId"`
	Name            string            `json:"name"`
	SpecificOptions []*SpecificOption `json:"specificOptions,optional"`
}

type ProductStatistics struct {
	Id                    int64 `json:"id,optional"`
	ProductId             int64 `json:"productId"`
	SoldAmount            int64 `json:"soldAmount,optional"`
	InventoryQuantity     int64 `json:"inventoryQuantity,optional"`
	ViewCount             int64 `json:"viewCount,optional"`
	BaseSoldAmount        int64 `json:"baseSoldAmount,optional"`
	BaseInventoryQuantity int64 `json:"baseInventoryQuantity,optional"`
	BaseViewCount         int64 `json:"baseViewCount,optional"`
}

type PutArtisanReply struct {
	*Artisan
}

type PutArtisanRequest struct {
	ArtisanId int64 `path:"id"`
	Artisan
}

type PutBillingAddressReply struct {
	BillingAddress *BillingAddress `json:"billingAddress"`
}

type PutBillingAddressRequest struct {
	BillingAddressId int64           `path:"id"`
	BillingAddress   *BillingAddress `json:"billingAddress"`
}

type PutCustomerReply struct {
	*Customer
}

type PutCustomerRequest struct {
	CustomerId int64 `path:"id"`
	Customer
}

type PutDeliveryAddressReply struct {
	DeliveryAddress *DeliveryAddress `json:"deliveryAddress"`
}

type PutDeliveryAddressRequest struct {
	DeliveryAddressId int64            `path:"id"`
	DeliveryAddress   *DeliveryAddress `json:"deliveryAddress"`
}

type PutLeadReply struct {
	*Lead
}

type PutLeadRequest struct {
	LeadId int64 `path:"id"`
	Lead
}

type PutOrderReply struct {
	*Order
}

type PutOrderRequest struct {
	OrderId int64 `path:"id"`
	Order
}

type PutPaymentReply struct {
	*Payment
}

type PutPaymentRequest struct {
	PaymentId int64 `path:"id"`
	Payment
}

type PutProductReply struct {
	*Product
}

type PutProductRequest struct {
	ProductId int64 `path:"id"`
	Product
}

type PutProductSpecificReply struct {
	*ProductSpecific
}

type PutProductSpecificRequest struct {
	ProductSpecificId int64 `path:"id"`
	ProductSpecific
}

type PutProductStatisticsReply struct {
	*ProductStatistics
}

type PutProductStatisticsRequest struct {
	ProductStatisticsId int64 `path:"id"`
	ProductStatistics
}

type PutRegisterCodeReply struct {
	*RegisterCode
}

type PutRegisterCodeRequest struct {
	RegisterCodeId int64 `path:"id"`
	RegisterCode
}

type PutSKUReply struct {
	*SKU
}

type PutSKURequest struct {
	SKUId int64 `path:"id"`
	SKU
}

type PutShippingAddressReply struct {
	*ShippingAddress
}

type PutShippingAddressRequest struct {
	ShippingAddressId int64 `path:"id"`
	ShippingAddress
}

type PutStoreReply struct {
	*Store
}

type PutStoreRequest struct {
	StoreId int64 `path:"id"`
	Store
}

type QrcodeActiveRequest struct {
	Qid                string   `path:"qid,optional"`                // 更新操作使用
	Name               string   `json:"name"`                        // 活码名称
	Desc               string   `json:"desc"`                        // 描述
	Owner              []string `json:"owner"`                       // 所属人
	RealQrcodeLink     string   `json:"RealQrcodeLink"`              // 真实二维码地址
	SceneLink          string   `json:"sceneLink"`                   // 场景落地页
	SafeThresholdValue int      `json:"safeThresholdValue,optional"` // 安全阈值（默认:0）
	ExpiryDate         int64    `json:"expiryDate"`                  // 有效期截止日(时间戳)
}

type QueryMenusReply struct {
	Button    interface{} `json:"button"`
	MatchRule interface{} `json:"matchrule"`
}

type RegisterCode struct {
	Id                 int64  `json:"id,optional"`
	Code               string `json:"code,optional"`
	RegisterCustomerID int64  `json:"registerCustomerID,optional"`
	ExpiredAt          string `json:"expiredAt,optional"`
	CreatedAt          string `json:"createdAt,optional"`
}

type RegisterPluginReply struct {
	Name string                 `json:"name"`
	Etc  map[string]interface{} `json:"etc"`
}

type RegisterPluginRequest struct {
	Name   string  `json:"name"`
	Routes []Route `json:"routes"`
	Addr   string  `json:"addr"`
}

type RemoveCartItemReply struct {
	ItemId int64 `json:"itemId"`
}

type RemoveCartItemRequest struct {
	ItemId int64 `path:"itemId"`
}

type ResetPasswordReply struct {
	Status string `json:"status"`
}

type ResetPasswordRequest struct {
	UserId int64 `json:"userId"`
}

type Resource struct {
	Link         string `json:"link"`
	ResourceType string `json:"resourceType"`
	CreateTime   string `json:"createTime"`
}

type RoleUser struct {
	Id          int64               `json:"id"`
	Name        string              `json:"name"`
	Nickname    string              `json:"nickname"`
	Account     string              `json:"account"`
	PhoneNumber string              `json:"phoneNumber"`
	Department  *RoleUserDepartment `json:"department"`
	Email       string              `json:"email"`
}

type RoleUserDepartment struct {
	Id   int64  `json:"id"`
	Name string `json:"name"`
}

type Route struct {
	Method string `json:"method"`
	Path   string `json:"path"`
}

type SKU struct {
	Id         int64   `json:"id,optional"`
	UniqueId   string  `json:"uniqueId,optional"`
	SkuNo      string  `json:"skuNo,optional"`
	ProductId  int64   `json:"productId,optional"`
	Inventory  int     `json:"inventory,optional"`
	UnitPrice  float64 `json:"unitPrice,optional"`
	ListPrice  float64 `json:"listPrice,optional"`
	IsActive   bool    `json:"isActive,optional"`
	OptionsIds []int64 `json:"optionsIds,optional"`
}

type SceneQrcodeActiveReply struct {
	QId                string   `json:"qid"`                // 唯一码
	Name               string   `json:"name"`               // 活码名称
	Desc               string   `json:"desc"`               // 描述
	Owner              []string `json:"owner"`              // 所属人
	RealQrcodeLink     string   `json:"RealQrcodeLink"`     // 真实二维码地址
	Platform           int      `json:"platform"`           // 平台
	Classify           int      `json:"classify"`           // 类型 1: 群 2：客户 3：渠道
	SceneLink          string   `json:"sceneLink"`          // 场景落地页
	SafeThresholdValue int      `json:"safeThresholdValue"` // 安全阈值（默认:0）
	ExpiryDate         int64    `json:"expiryDate"`         // 有效期截止日
	State              int      `json:"state"`              // 状态1：启用 2：禁用 3：删除
	ActiveQrcodeLink   string   `json:"activeQrcodeLink"`   // 群活码图片地址(可以载入任意媒资文章)
	CPA                int      `json:"cpa"`                // 活码打开次数
}

type SceneRequest struct {
	Qid string `path:"qid"` // 唯一标识
}

type SetRolePermissionsReply struct {
	Status string `json:"status"`
}

type SetRolePermissionsRequest struct {
	RoleCode string  `path:"roleCode"`
	APIIds   []int64 `json:"apiIds"`
}

type SetRoleUsersReply struct {
	Status string `json:"status"`
}

type SetRoleUsersRequest struct {
	RoleCode string  `path:"roleCode"`
	UserIds  []int64 `json:"userIds"`
}

type SetUserRolesReply struct {
	Status string `json:"status"`
}

type SetUserRolesRequest struct {
	UserId    int64    `path:"userId"`
	RoleCodes []string `json:"roleCodes"`
}

type ShippingAddress struct {
	Id           int64  `json:"id,optional"`
	CustomerId   int64  `json:"customerId,optional"`
	Name         string `json:"name,optional"`
	Recipient    string `json:"recipient,optional"`
	AddressLine  string `json:"addressLine,optional"`
	AddressLine2 string `json:"addressLine2,optional"`
	Street       string `json:"street,optional"`
	City         string `json:"city,optional"`
	Province     string `json:"province,optional"`
	PostalCode   string `json:"postalCode,optional"`
	Country      string `json:"country,optional"`
	PhoneNumber  string `json:"phoneNumber,optional"`
	IsDefault    bool   `json:"isDefault,optional"`
}

type SortIdItem struct {
	Id        int64 `json:"id,optional"`
	SortIndex int   `json:"sortIndex,optional"`
}

type SpecificOption struct {
	Id                int64  `json:"id,optional"`
	ProductSpecificId int64  `json:"ProductSpecificId,optional"`
	Name              string `json:"name,optional"`
	IsActivated       bool   `json:"isActivated,optional"`
}

type StatusWeWorkReply struct {
	Status string `json:"status"`
}

type Store struct {
	Id             int64            `json:"id,optional"`
	Name           string           `json:"name"`
	StoreUserId    int64            `json:"storeUserId,optional"`
	ContactNumber  string           `json:"contactNumber"`
	Email          string           `json:"email,optional"`
	Address        string           `json:"address"`
	Description    string           `json:"description,optional"`
	Longitude      float32          `json:"longitude,optional"`
	Latitude       float32          `json:"latitude,optional"`
	StartWork      string           `json:"startWork,optional"`
	EndWork        string           `json:"endWork,optional"`
	Artisans       []*StoreArtisan  `json:"artisans,optional"`
	CreatedAt      string           `json:"createdAt,optional"`
	CoverImageId   int64            `json:"coverImageId,optional"`
	CoverImage     *MediaResource   `json:"coverImage,optional"`
	DetailImageIds []int64          `json:"detailImageIds,optional"`
	DetailImages   []*MediaResource `json:"detailImages,optional"`
}

type StoreArtisan struct {
	UserId          int64                `json:"userId,optional"`
	Name            string               `json:"name,optional"`
	Level           int8                 `json:"level,optional"`
	Gender          bool                 `json:"gender,optional"`
	Birthday        string               `json:"birthday,optional"`
	PhoneNumber     string               `json:"phoneNumber,optional"`
	CoverURL        string               `json:"coverURL,optional"`
	WorkNo          string               `json:"workNo,optional"`
	Email           string               `json:"email,optional"`
	Experience      string               `json:"experience,optional"`
	Specialty       string               `json:"specialty,optional"`
	Certificate     string               `json:"certificate,optional"`
	Address         string               `json:"address,optional"`
	ArtisanSpecific StoreArtisanSpecific `json:"artisanSpecific,optional"`
}

type StoreArtisanSpecific struct {
	ArtisanId int64 `json:"artisanId,optional"`
}

type SyncMenusReply struct {
	Success bool        `json:"success,optional"`
	Data    interface{} `json:"data"`
}

type SyncMenusRequest struct {
	OAMenu
}

type SyncUsersReply struct {
	Status bool `json:"status"`
}

type SyncUsersRequest struct {
	Source string `json:"source"`
	Target string `json:"target"`
}

type SyncWeWorkOrganizationReply struct {
	Status string `json:"status"`
}

type Tag struct {
	Id           int64          `json:"id,optional"`
	PId          int64          `json:"pId"`
	Name         string         `json:"name"`
	Sort         int            `json:"sort"`
	ViceName     string         `json:"viceName"`
	Description  string         `json:"description"`
	CreatedAt    string         `json:"createdAt,optional"`
	CoverImageId int64          `json:"coverImageId,optional"`
	CoverImage   *MediaResource `json:"coverImage,optional"`
	Children     []*Tag         `json:"children,optional"`
}

type TagFieldTag struct {
	Name string `json:"name"`
	Sort int    `json:"sort,optional"`
}

type TokenBalance struct {
	Id                 int64   `json:"id,optional" desc:"代币ID"`
	Balance            float64 `json:"balance" desc:"代币余额"`
	Usage              float64 `json:"usage" desc:"使用代币"`
	UnusedTicketsCount int64   `json:"unusedTicketsCount" desc:"可继续使用的ticket"`
	ReservedToken      float64 `json:"reservedToken" desc:"预扣代币"`
}

type UpdateCartItemQuantityReply struct {
	*CartItem
}

type UpdateCartItemQuantityRequest struct {
	ItemId   int64 `path:"itemId"`
	Quantity int   `json:"quantity"`
}

type UpdateCategoryReply struct {
	Id int64 `json:"id"`
}

type UpdateCategoryRequest struct {
	Id int64 `path:"id"`
	Category
}

type UpdateContractWayReply struct {
	ContractWayUpdated ContractWay `json:"contractWayUpdated"`
}

type UpdateContractWayRequest struct {
	Id            int64    `path:"id"`
	Type          int      `json:"type,optional"`
	Scene         int      `json:"scene,optional"`
	Style         string   `json:"style,optional"`
	Remark        string   `json:"remark,optional"`
	SkipVerify    bool     `json:"skipVerify,optional"`
	State         string   `json:"state,optional"`
	Users         []string `json:"users,optional"`
	Parties       []int64  `json:"parties,optional"`
	IsTemp        bool     `json:"isTemp,optional"`
	ExpiresIn     int      `json:"expiresIn,optional"`
	ChatExpiresIn int      `json:"chatExpiresIn,optional"`
	UnionId       string   `json:"unionId,optional"`
	IsExclusive   bool     `json:"isExclusive,optional"`
	Conclusions   string   `json:"conclusions,optional"`
}

type UpdateCorpTagRequest struct {
	TagId   string `json:"tagId"`
	Name    string `json:"name"`
	Sort    int    `json:"sort,optional"`
	AgentId int64  `json:"agentId,optional"`
}

type UpdateCustomerProfileReply struct {
	*Customer
}

type UpdateCustomerProfileRequest struct {
	CustomerId int64 `path:"id"`
	Customer
}

type UpdateDictionaryItemReply struct {
	*DictionaryItem
}

type UpdateDictionaryItemRequest struct {
	Key         string `path:"key"`
	Type        string `path:"type"`
	Name        string `json:"name,optional"`
	Value       string `json:"value,optional"`
	Sort        int    `json:"sort,optional"`
	Description string `json:"description,optional"`
}

type UpdateDictionaryTypeReply struct {
	*DictionaryType
}

type UpdateDictionaryTypeRequest struct {
	Type        string `path:"type"`
	Name        string `json:"name,optional"`
	Description string `json:"description,optional"`
}

type UpdateMGMRuleReply struct {
	MGMRuleId int64 `json:"id"`
}

type UpdateMGMRuleRequest struct {
	MGMRuleId int64 `path:"id"`
	MGMRule
}

type UpdateMediaReply struct {
	MediaId int64 `json:"id"`
}

type UpdateMediaRequest struct {
	MediaId int64 `path:"id"`
	Media
}

type UpdateOpportunityReply struct {
	*Opportunity
}

type UpdateOpportunityRequest struct {
	Id          int64   `path:"id"`
	Name        string  `json:"name,optional"`
	Requirement string  `json:"requirement,optional"`
	CustomerId  int64   `json:"customerId,optional"`
	Probability float32 `json:"probability,optional"`
	Source      string  `json:"source,optional,options=new_customer|old_customer_new_purchase|old_customer_repurchase|old_customer_upgrade"`
	Type        string  `json:"type,optional,options=trial_requirement|requirement_match|detailed_requirement_analysis|solution_provided|quotation|negotiation|closed_unsuccessful|closed_successful"`
	UserId      int64   `json:"userId,optional"`
	Stage       string  `json:"stage,optional"`
	ClosedDate  string  `json:"closedDate,optional"`
}

type UpdatePaymentReply struct {
	*Payment
}

type UpdatePaymentRequest struct {
	PaymentId int64 `path:"id"`
	Payment
}

type UpdatePriceBookEntryReply struct {
	Id int64 `json:"id"`
}

type UpdatePriceBookEntryRequest struct {
	Id int64 `path:"id"`
	PriceBookEntry
}

type UpdateProductCategoryReply struct {
	Id int64 `json:"id"`
}

type UpdateProductCategoryRequest struct {
	Id int64 `path:"id"`
	ProductCategory
}

type UpdateTagReply struct {
	Id int64 `json:"id"`
}

type UpdateTagRequest struct {
	Id int64 `path:"id"`
	Tag
}

type UpdateUserReply struct {
	*User
}

type UpdateUserRequest struct {
	Id            int64  `path:"id"`
	Name          string `json:"name,optional"`
	NickName      string `json:"nickName,optional"`
	Desc          string `json:"desc,optional"`
	Email         string `json:"email,optional"`
	Avatar        string `json:"avatar,optional"`
	ExternalEmail string `json:"externalEmail,optional"`
	MobilePhone   string `json:"mobilePhone,optional"`
	Gender        string `json:"gender,optional,options=male|female|un_know"`
	DepId         int64  `json:"depId,optional"`
	PositionId    int64  `json:"positionId,optional"`
	JobTitle      string `json:"jobTitle,optional"`
	Password      string `json:"password,optional"`
	Status        string `json:"status,optional,options=enabled|disabled"`
}

type UpsertPriceBookReply struct {
	*PriceBook
}

type UpsertPriceBookRequest struct {
	PriceBook
}

type User struct {
	Id            int64           `json:"id"`
	Account       string          `json:"account"`
	Name          string          `json:"name"`
	Email         string          `json:"email"`
	MobilePhone   string          `json:"mobilePhone"`
	Gender        string          `json:"gender"`
	NickName      string          `json:"nickName,optional"`
	Desc          string          `json:"desc,optional"`
	Avatar        string          `json:"avatar,optional"`
	ExternalEmail string          `json:"externalEmail,optional"`
	Roles         []string        `json:"roles"`
	Department    *UserDepartment `json:"department"`
	Position      *Position       `json:"position"`
	PositionId    int64           `json:"positionId"`
	JobTitle      string          `json:"jobTitle"`
	IsEnabled     bool            `json:"isEnabled"`
	CreatedAt     string          `json:"createdAt"`
}

type UserDepartment struct {
	DepId   int64  `json:"depId"`
	DepName string `json:"depName"`
}

type UserOption struct {
	Id          int64  `json:"id"`
	Avatar      string `json:"avatar"`
	Account     string `json:"account"`
	Name        string `json:"name"`
	Email       string `json:"email"`
	PhoneNumber string `json:"phoneNumber"`
}

type UserQueryDepartmentOption struct {
	DepartmentId   int64  `json:"departmentId"`
	DepartmentName string `json:"departmentName"`
}

type UserQueryRoleOption struct {
	RoleCode string `json:"roleCode"`
	RoleName string `json:"roleName"`
}

type WeWorkAddMsgTemplateRequest struct {
	ChatType       string               `json:"chatType,optional,options=single|group"` // 群发任务的类型，默认为single，表示发送给客户，group表示发送给客户群
	ExternalUserId []string             `json:"externalUserId,optional"`                // chat_type为single时有效，不可与sender同时为空
	Sender         string               `json:"sender,optional"`                        // 发送企业群发消息的成员userid，当类型为发送给客户群时必填
	Text           *WeWorkTextOfMessage `json:"text"`
	Attachments    []Content            `json:"attachments,optional"`
	SendTime       int64                `json:"sendTime,optional"` // 定时发送，不填默认立刻发送// 附件， 当前仅支持图片
}

type WeWorkAddMsgTemplateResponse struct {
	FailList []string `json:"failList"`
	MsgId    string   `json:"msgId"`
}

type WeWorkCustomerGroupRequest struct {
	StatusFilter int         `json:"statusFilter,optional"` // https://developer.work.weixin.qq.com/document/path/92120
	OwnerFilter  OwnerFilter `json:"ownerFilter,optional"`
	Cursor       string      `json:"cursor,optional"`
	Limit        int         `json:"limit,optional"`
}

type WeWorkCustomersRequest struct {
	UserId    string `json:"userId,optional"` //https://developer.work.weixin.qq.com/document/path/92113
	Name      string `json:"name,optional"`
	UnionId   string `json:"unionId,optional"`
	TagId     string `json:"tagId,optional"`
	Sync      int    `form:"sync,optional"` // 是否同步(所有客户列表生效，场景：前端复选框勾选后，请求数据都会自动同步)
	PageIndex int    `form:"pageIndex,optional"`
	PageSize  int    `form:"pageSize,optional"`
}

type WeWorkDepartment struct {
	WeWorkDepId      int      `json:"weWorkDepId"`
	Name             string   `json:"name"`
	NameEn           string   `json:"nameEn"`
	WeWorkParentId   int      `json:"weWorkParentId"`
	Order            int      `json:"order"`
	DepartmentLeader []string `json:"departmentLeader"`
	RefDepartmentId  int64    `json:"refDepartmentId"`
}

type WeWorkListCustomerGroupReply struct {
	List []WechatCustomerGroup `json:"list"` //https://developer.work.weixin.qq.com/document/path/92122
}

type WeWorkQrcodeActive struct {
	QId                string   `json:"qid"`                // 唯一码
	Name               string   `json:"name"`               // 活码名称
	Desc               string   `json:"desc"`               // 描述
	Owner              []string `json:"owner"`              // 所属人
	RealQrcodeLink     string   `json:"RealQrcodeLink"`     // 真实二维码地址
	Platform           int      `json:"platform"`           // 平台
	Classify           int      `json:"classify"`           // 类型 1: 群 2：客户 3：渠道
	SceneLink          string   `json:"sceneLink"`          // 场景落地页
	SafeThresholdValue int      `json:"safeThresholdValue"` // 安全阈值（默认:0）
	ExpiryDate         int64    `json:"expiryDate"`         // 有效期截止日
	ExpiryState        int      `json:"expiryState"`        // 是否过期
	State              int      `json:"state"`              // 状态1：启用 2：禁用 3：删除
	ActiveQrcodeLink   string   `json:"activeQrcodeLink"`   // 群活码图片地址(可以载入任意媒资文章)
	CPA                int      `json:"cpa"`                // 活码打开次数
}

type WeWorkTag struct {
	Type      int    `json:"type,omitempty"`
	IsSelf    int    `json:"isSelf"` //1：自建
	TagId     string `json:"tagId"`
	GroupId   string `json:"groupId,omitempty"`
	GroupName string `json:"groupName,omitempty"`
	Name      string `json:"name"`
	Sort      int    `json:"sort"`
}

type WeWorkTagGroup struct {
	GroupId   string `json:"groupId"`
	GroupName string `json:"groupName"`
}

type WeWorkTextOfMessage struct {
	Content string `json:"content"` // "内容"
}

type WebToken struct {
	TokenType    string `json:"tokenType"`
	ExpiresIn    string `json:"expiresIn"`
	AccessToken  string `json:"accessToken"`
	RefreshToken string `json:"refreshToken"`
}

type WechatCustomer struct {
	ExternalContact WechatCustomersWithExternalContactExternalProfile `json:"externalContact"`
	FollowUser      *WechatCustomersWithFollowUser                    `json:"followUser,omitempty"`
	NextCursor      string                                            `json:"nextCursor,omitempty"`
}

type WechatCustomerGroup struct {
	ChatId     string                           `json:"chatId"`
	Name       string                           `json:"name"`
	Owner      string                           `json:"owner"`
	CreateTime int                              `json:"createTime"`
	Notice     string                           `json:"notice"`
	MemberList []*WechatCustomerGroupMemberList `json:"memberList"`
	AdminList  []*WechatCustomerGroupAdminList  `json:"adminList"`
}

type WechatCustomerGroupAdminList struct {
	UserId string `json:"userId"`
}

type WechatCustomerGroupMemberList struct {
	UserId        string                               `json:"userId"`
	Type          int                                  `json:"type"`
	JoinTime      int                                  `json:"joinTime"`
	JoinScene     int                                  `json:"joinScene"`
	Invitor       WechatCustomerGroupMemberListInvitor `json:"invitor"`
	GroupNickname string                               `json:"groupNickname"`
	Name          string                               `json:"name"`
	UnionId       string                               `json:"unionId,omitempty"`
}

type WechatCustomerGroupMemberListInvitor struct {
	UserId string `json:"userId"`
}

type WechatCustomersFollowUserWithTags struct {
	GroupName string `json:"groupName"`
	TagName   string `json:"tagName"`
	TagId     string `json:"tagId,omitempty"`
	Type      int    `json:"type"`
}

type WechatCustomersFollowUserWithWechatChannels struct {
	Nickname string `json:"nickname"`
	Source   int    `json:"source"`
}

type WechatCustomersWithExternalContactExternalProfile struct {
	ExternalUserId  string                                            `json:"externalUserId"`
	Name            string                                            `json:"name"`
	Position        string                                            `json:"position"`
	Avatar          string                                            `json:"avatar"`
	CorpName        string                                            `json:"corpName"`
	CorpFullName    string                                            `json:"corpFullName"`
	Type            int                                               `json:"type"`
	Gender          int                                               `json:"gender"`
	UnionId         string                                            `json:"unionId"`
	UserId          string                                            `json:"userId"`
	ExternalProfile ExternalContactExternalProfileWithExternalProfile `json:"externalProfile"`
}

type WechatCustomersWithFollowUser struct {
	UserId         string                                      `json:"userId"`
	Remark         string                                      `json:"remark"`
	Description    string                                      `json:"description"`
	Createtime     int                                         `json:"createtime"`
	Tags           []WechatCustomersFollowUserWithTags         `json:"tags"`
	TagIds         []string                                    `json:"tagIds"`
	WechatChannels WechatCustomersFollowUserWithWechatChannels `json:"wechatChannels"`
	RemarkCorpName string                                      `json:"remarkCorpName,omitempty"`
	RemarkMobiles  []string                                    `json:"remarkMobiles,omitempty"`
	OpenUserId     string                                      `json:"openUserId"`
	AddWay         int                                         `json:"addWay"`
	State          string                                      `json:"state,omitempty"`
}

type WechatListCustomersReply struct {
	List      []*WechatCustomer `json:"list"`
	PageIndex int               `json:"pageIndex"`
	PageSize  int               `json:"pageSize"`
	Total     int64             `json:"total"`
}

type WechatSyncCustomerReply struct {
	Status string `json:"status"`
}

type WechatUser struct {
	WeWorkUserId           string `json:"weWorkUserId"`
	Name                   string `json:"name"`
	Position               string `json:"position"`
	Mobile                 string `gorm:"unique"`
	Gender                 string `json:"gender"`
	Email                  string `gorm:"unique"`
	BizMail                string `json:"bizMail"`
	Avatar                 string `json:"avatar"`
	ThumbAvatar            string `json:"thumbAvatar"`
	Telephone              string `json:"telephone"`
	Alias                  string `json:"alias"`
	Address                string `json:"address"`
	OpenUserId             string `json:"openUserId"`
	WeWorkMainDepartmentId int    `json:"weWorkMainDepartmentId"`
	Status                 int    `json:"status"`
	QrCode                 string `json:"qrCode"`
}

type WeworkUser struct {
	Userid string `json:"userId"`
}
