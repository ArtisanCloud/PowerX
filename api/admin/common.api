syntax = "v1"

info(
    title: "通用接口"
    desc: "通用接口"
    author: "Northseadl"
    email: "northseadl@outlook.com"
    version: "v1"
)

@server(
    group: admin/common
    prefix: /api/v1/admin/common
    middleware: EmployeeNoPermJWTAuth
)

service PowerX {
    @doc "员工Options远程搜索"
    @handler GetEmployeeOptions
    get /options/employees (GetEmployeeOptionsRequest) returns (GetEmployeeOptionsReply)

    @doc "查询员工过滤条件"
    @handler GetEmployeeQueryOptions
    get /options/employee-query returns (GetEmployeeQueryOptionsReply)

    @doc "部门Options远程搜索"
    @handler GetDepartmentOptions
    get /options/departments (GetDepartmentOptionsRequest) returns (GetDepartmentOptionsReply)
}

type (
    GetEmployeeOptionsRequest struct {
        LikeName string `form:"likeName,optional"`
        LikeEmail string `form:"likeEmail,optional"`
        LikePhoneNumber string `form:"likePhoneNumber,optional"`
        PageIndex int `form:"pageIndex,optional"`
        PageSize int `form:"pageSize,optional"`
    }

    EmployeeOption struct {
        Id int64 `json:"id"`
        Avatar string `json:"avatar"`
        Account string `json:"account"`
        Name string `json:"name"`
        Email string `json:"email"`
        PhoneNumber string `json:"phoneNumber"`
    }

    GetEmployeeOptionsReply struct {
        List []EmployeeOption `json:"list"`
        PageIndex int `json:"pageIndex"`
        PageSize int `json:"pageSize"`
        Total int64 `json:"total"`
    }
)

type (
    EmployeeQueryRoleOption {
        RoleCode string `json:"roleCode"`
        RoleName string `json:"roleName"`
    }

    EmployeeQueryDepartmentOption {
        DepartmentId int64 `json:"departmentId"`
        DepartmentName string `json:"departmentName"`
    }

    GetEmployeeQueryOptionsReply {
        Positions []string `json:"positions"`
        Roles []EmployeeQueryRoleOption `json:"roles"`
        Departments []EmployeeQueryDepartmentOption `json:"departments"`
    }
)

type (
    GetDepartmentOptionsRequest struct {
        Ids []int64 `form:"ids,optional"`
        LikeName string `form:"likeName,optional"`
        PageIndex int `form:"pageIndex,optional"`
        PageSize int `form:"pageSize,optional"`
    }

    DepartmentOption struct {
        Id int64 `json:"id"`
        Name string `json:"name"`
    }

    GetDepartmentOptionsReply struct {
        List []DepartmentOption `json:"list"`
        PageIndex int `json:"pageIndex"`
        PageSize int `json:"pageSize"`
        Total int64 `json:"total"`
    }
)


