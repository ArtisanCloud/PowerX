syntax = "v1"

info(
    title: "产品服务"
    desc: "产品服务"
    author: "MichaelHu"
    email: "matrix-x@artisan-cloud.com"
    version: "v1"
)


@server(
    group: admin/product
    prefix: /api/v1/admin/product
    middleware: EmployeeJWTAuth
)

service PowerX {
    @doc "查询产品列表"
    @handler ListProducts
    get /products (GetProductListRequest) returns (GetProductListReply)

    @doc "查询产品详情"
    @handler GetProduct
    get /products/:id (GetProductRequest) returns (GetProductReply)


    @doc "创建产品"
    @handler CreateProduct
    post /products (CreateProductRequest) returns (CreateProductReply)


    @doc "全量产品"
    @handler PutProduct
    put /products/:id (PutProductRequest) returns (PutProductReply)

    @doc "增量产品"
    @handler PatchProduct
    patch /products/:id (PatchProductRequest) returns (PatchProductReply)


    @doc "删除产品"
    @handler DeleteProduct
    delete /products/:id (DeleteProductRequest) returns (DeleteProductReply)

    @doc "分配产品品类给产品品类分类"
    @handler AssignProductToProductCategory
    post /products/:id/actions/assign-to-product-categroy (AssignProductToProductCategoryRequest) returns (AssignProductToProductCategoryReply)
}

type (
    ProductSpecific {
        Inventory string `json:"inventory"`
        Weight string `json:"weight"`
        Volume string `json:"volume"`
        Encode string `json:"encode"`
        BarCode string `json:"barCode"`
        Extra string `json:"extra"`
    }

    Product {
        Id int64 `json:"id,optional"`
        Name string `json:"name"`
        Type string `json:"type"`
        Plan string `json:"plan"`
        AccountingCategory string `json:"accountingCategory"`
        CanSellOnline string `json:"canSellOnline"`
        CanUseForDeduct string `json:"canUseForDeduct"`
        ApprovalStatus string `json:"approvalStatus"`
        IsActivated string `json:"isActivated"`
        Description string `json:"description"`
        CoverURL string `json:"coverURL"`
        PurchasedQuantity string `json:"purchasedQuantity"`
        ValidityPeriodDays string `json:"validityPeriodDays"`
        SaleStartDate string `json:"saleStartDate"`
        SaleEndDate string `json:"saleEndDate"`
        CreatedAt string `json:"createdAt,optional"`
        ProductSpecific
    }
)
type (
    GetProductListRequest struct {
        ProductType string `form:"productType,optional"`
        Keys []string `form:"keys,optional"`
        OrderBy string `form:"orderBy,optional"`
        PageIndex int `form:"pageIndex,optional"`
        PageSize int `form:"pageSize,optional"`
    }


    GetProductListReply struct {
        List []Product `json:"list"`
        PageIndex int `json:"pageIndex"`
        PageSize int `json:"pageSize"`
        Total int64 `json:"total"`
    }
)

type (
    CreateProductRequest struct {
        Product
    }

    CreateProductReply struct {
        ProductKey int64 `json:"productId"`
    }
)

type (
    GetProductRequest struct {
        ProductId int64 `json:"productId"`
    }

    GetProductReply struct {
        *Product
    }
)


type (
    PutProductRequest struct {
        ProductId int64 `json:"productId"`
        Product
    }

    PutProductReply struct {
        *Product
    }
)

type (
    PatchProductRequest struct {
        ProductId int64 `json:"productId"`
        Product
    }

    PatchProductReply struct {
        *Product
    }
)


type (
    DeleteProductRequest struct {
        ProductId int64 `path:"productId"`
    }

    DeleteProductReply struct {
        ProductId int64 `json:"productId"`
    }
)


type (
    AssignProductToProductCategoryRequest {
        Id int64 `json:"id"`
        ProductCategoryId int64 `json:"productCategoryId"`
    }

    AssignProductToProductCategoryReply {
        Product
    }
)
