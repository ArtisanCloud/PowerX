syntax = "v1"

info(
    title: "碎片标签"
    desc: "碎片标签"
    author: "MichaelHu"
    email: "matrix-x@artisan-cloud.com"
    version: "v1"
)


@server(
    group: admin/infoorganization/tag
    prefix: /api/v1/admin/info-organization
    middleware: UserJWTAuth
)

service PowerX {
    @doc "查询碎片标签列表"
    @handler ListTagTree
    get /tag-tree (ListTagTreeRequest) returns (ListTagTreeReply)

    @doc "查询碎片标签详情"
    @handler GetTag
    get /tags/:id (GetTagRequest) returns (GetTagReply)


    @doc "创新碎片标签"
    @handler CreateTag
    post /tags (CreateTagRequest) returns (CreateTagReply)

    @doc "修改碎片标签"
    @handler UpdateTag
    put /tags/:id (UpdateTagRequest) returns (UpdateTagReply)


    @doc "修改碎片标签父级"
    @handler PatchTag
    patch /tags/:id (PatchTagRequest) returns (PatchTagReply)


    @doc "删除碎片标签"
    @handler DeleteTag
    delete /tags/:id (DeleteTagRequest) returns (DeleteTagReply)
}

type (

    Tag {
        Id int64 `json:"id,optional"`
        PId int64 `json:"pId"`
        Name string `json:"name"`
        Sort int `json:"sort"`
        ViceName string `json:"viceName"`
        Description string `json:"description"`
        CreatedAt string `json:"createdAt,optional"`
        ImageAbleInfo
        CoverImageId int64 `json:"coverImageId,optional"`
        CoverImage *MediaResource `json:"coverImage,optional"`
        Children []*Tag `json:"children,optional"`
    }
)
type (
    ListTagTreeRequest {
        TagPId int `form:"tagPId,optional"`
        NeedChildren bool `form:"needChildren,optional"`
        Names []string `form:"name,optional"`
        OrderBy string `form:"orderBy,optional"`
    }


    ListTagTreeReply {
        ProductCategories []*Tag `json:"tree"`
    }
)


type (
    CreateTagRequest {
        Tag
    }

    CreateTagReply {
        *Tag
    }
)

type (
    UpdateTagRequest {
        Id int64 `path:"id"`
        Tag
    }
    UpdateTagReply {
        Id int64 `json:"id"`
    }
)

type (
    PatchTagRequest {
        Id int64 `path:"id"`
        PId int64 `json:"pId"`
    }

    PatchTagReply {
        Tag
    }
)

type (
    GetTagRequest {
        TagId int64 `path:"id"`
    }

    GetTagReply {
        *Tag
    }
)


type (
    DeleteTagRequest {
        Id int64 `path:"id"`
    }

    DeleteTagReply {
        Id int64 `json:"id"`
    }
)


