syntax = "v1"

info(
    title: "价格手册"
    desc: "价格手册"
    author: "MichaelHu"
    email: "matrix-x@artisan-cloud.com"
    version: "v1"
)


@server(
    group: admin/product
    prefix: /api/v1/admin/product
    middleware: EmployeeJWTAuth
)

service PowerX {
    @doc "查询价格手册列表"
    @handler ListPriceBooks
    get /price-books (ListPriceBooksPageRequest) returns (ListPriceBooksPageReply)


    @doc "查询价格手册详情"
    @handler GetPriceBook
    get /price-books/:id (GetPriceBookRequest) returns (GetPriceBookReply)


    @doc "创新价格手册"
    @handler UpsertPriceBook
    post /price-books (UpsertPriceBookRequest) returns (UpsertPriceBookReply)

    @doc "删除价格手册"
    @handler DeletePriceBook
    delete /price-books/:id (DeletePriceBookRequest) returns (DeletePriceBookReply)

    @doc "配置价格手册条目"
    @handler ConfigPriceBook
    post /price-book-entries (ConfigPriceBookEntryRequest) returns (ConfigPriceBookEntryReply)
}

type (
    PriceBookEntrySpecific {
        Inventory int16 `json:"inventory,optional"`
        Weight float32 `json:"weight,optional"`
        Volume float32 `json:"volume,optional"`
        Encode string `json:"encode,optional"`
        BarCode string `json:"barCode,optional"`
        Extra string `json:"extra,optional"`
    }

    PriceBook {
        Id int64 `json:"id,optional"`
        IsStandard bool `json:"isStandard,optional"`
        Name string `json:"name"`
        Description string `json:"description,optional"`
        StoreId int64 `json:"storeId,optional"`
        CreatedAt string `json:"createdAt,optional"`
    }

    PriceBookEntry {
        UniqueID string `json:"uniqueID,optional"`
        PriceBookId int64 `json:"priceBookId"`
        ProductId int64 `json:"productId"`
        UnitPrice float64 `json:"unitPrice"`
        RetailPrice float64 `json:"retailPrice,optional"`
        IsActive bool `json:"isActive"`
        PriceBookEntrySpecific
    }
)

type (
    ListPriceBooksPageRequest {
        LikeName string `json:"likeName,optional"`
        StoreId int64 `json:"storeId,optional"`
        PageIndex int `form:"pageIndex,optional"`
        PageSize int `form:"pageSize,optional"`
    }

    ListPriceBooksPageReply {
        List []PriceBook `json:"list"`
        PageIndex int `json:"pageIndex"`
        PageSize int `json:"pageSize"`
        Total int64 `json:"total"`
    }
)

type (
    GetPriceBookRequest struct {
        PriceBook int64 `path:"id"`
    }

    GetPriceBookReply struct {
        *PriceBook
    }
)


type (
    UpsertPriceBookRequest {
        PriceBook
    }

    UpsertPriceBookReply {
        *PriceBook
    }
)



type (
    DeletePriceBookRequest {
        Id int64 `path:"id"`
    }

    DeletePriceBookReply {
        Id int64 `json:"id"`
    }
)



type (
    ConfigPriceBookEntryRequest {
        Id int64 `path:"id"`
    }

    ConfigPriceBookEntryReply {
        Id int64 `json:"id"`
    }
)