syntax = "v1"

info(
    title: "门店"
    desc: "门店"
    author: "MichaelHu"
    email: "matrix-x@artisan-cloud.com"
    version: "v1"
)


@server(
    group: admin/product
    prefix: /api/v1/admin/product
    middleware: EmployeeJWTAuth
)

service PowerX {
    @doc "查询门店列表"
    @handler ListStores
    get /stores (GetStoreListRequest) returns (GetStoreListReply)

    @doc "查询门店详情"
    @handler GetStore
    get /stores/:id (GetStoreRequest) returns (GetStoreReply)


    @doc "创建门店"
    @handler CreateStore
    post /stores (CreateStoreRequest) returns (CreateStoreReply)


    @doc "全量门店"
    @handler PutStore
    put /stores/:id (PutStoreRequest) returns (PutStoreReply)

    @doc "增量门店"
    @handler PatchStore
    patch /stores/:id (PatchStoreRequest) returns (PatchStoreReply)


    @doc "删除门店"
    @handler DeleteStore
    delete /stores/:id (DeleteStoreRequest) returns (DeleteStoreReply)

    @doc "分配门店品类给门店品类分类"
    @handler AssignStoreToStoreCategory
    post /stores/:id/actions/assign-to-store-categroy (AssignStoreManagerRequest) returns (AssignStoreManagerReply)
}

type (

    StoreArtisanSpecific{
        ArtisanId int64 `json:"artisanId,optional"`
    }

    StoreArtisan {
        EmployeeId int64 `json:"employeeId,optional"`
        Name string `json:"name,optional"`
        Level int8 `json:"level,optional"`
        Gender string `json:"gender,optional"`
        birthday string `json:"birthday,optional"`
        PhoneNumber string `json:"phoneNumber,optional"`
        CoverURL string `json:"coverURL,optional"`
        WorkNo string `json:"workNo,optional"`
        Email string `json:"email,optional"`
        Experience uint `json:"experience,optional"`
        Specialty string `json:"specialty,optional"`
        Certificate string `json:"certificate,optional"`
        Address string `json:"address,optional"`
        ArtisanSpecific StoreArtisanSpecific `json:"artisanSpecific,optional"`
    }

    Store {
        Id int64 `json:"id,optional"`
        Name string `json:"name"`
        EmployeeId int64 `json:"employeeId"`
        ContactNumber string `json:"contactNumber"`
        CoverURL string `json:"coverURL"`
        Address string `json:"address"`
        Longitude float32 `json:"longitude"`
        Latitude float32 `json:"latitude"`
        Artisans []*StoreArtisan `json:"artisans,optional"`
        CreatedAt string `json:"createdAt,optional"`
    }
)
type (
    GetStoreListRequest struct {
        StoreType string `form:"storeType,optional"`
        Keys []string `form:"keys,optional"`
        OrderBy string `form:"orderBy,optional"`
    }


    GetStoreListReply struct {
        List []*Store `json:"list"`
    }
)

type (
    CreateStoreRequest struct {
        Store
    }

    CreateStoreReply struct {
        StoreId string `json:"id"`
    }
)

type (
    GetStoreRequest struct {
        StoreId int64 `path:"id"`
    }

    GetStoreReply struct {
        *Store
    }
)


type (
    PutStoreRequest struct {
        StoreId int64  `path:"storeId"`
        Store
    }

    PutStoreReply struct {
        *Store
    }
)

type (
    PatchStoreRequest struct {
        StoreId int64  `path:"storeId"`
        Store
    }

    PatchStoreReply struct {
        *Store
    }
)


type (
    DeleteStoreRequest struct {
        StoreId int64  `path:"storeId"`
    }

    DeleteStoreReply struct {
        StoreId int64  `json:"storeId"`
    }
)


type (
    AssignStoreManagerRequest {
        Id int64 `path:"id"`
        EmployeeId int64 `json:"employeeId"`
    }

    AssignStoreManagerReply {
        Store
    }
)
