syntax = "v1"

info(
    title: "客户管理"
    desc: "客户管理"
    author: "MichaelHu"
    email: "matrix-x@artisan-cloud.com"
    version: "v1"
)

@server(
    group: admin/customer
    prefix: /api/v1/admin/customer-domain
    middleware: EmployeeJWTAuth
)

service PowerX {
    @doc "查询客户"
    @handler GetCustomer
    get /customers/:id (GetCustomerReqeuest) returns (GetCustomerReply)

    @doc "获取客户分页列表"
    @handler ListCustomersPage
    get /customers/page-list (ListCustomersPageRequest) returns (ListCustomersPageReply)

    @doc "获取客户列表"
    @handler ListCustomers
    get /customers (ListCustomersRequest) returns (ListCustomersReply)

    @doc "创建客户"
    @handler CreateCustomer
    post /customers (CreateCustomerRequest) returns (CreateCustomerReply)

    @doc "更新客户"
    @handler PatchCustomer
    patch /customers/:id (PatchCustomerRequest) returns (PatchCustomerReply)

    @doc "删除客户"
    @handler DeleteCustomer
    delete /customers/:id (DeleteCustomerRequest) returns (DeleteCustomerReply)

    @doc "为客户分配员工"
    @handler AssignCustomerToEmployee
    post /customers/:id/actions/employees (AssignCustomerToEmployeeRequest) returns (AssignCustomerToEmployeeReply)
}

type (
    CustomerExternalId {
        OpenIdInMiniProgram string `json:"openIdInMiniProgram,optional"`
        OpenIdInWeChatOfficialAccount string `json:"openIdInWeChatOfficialAccount,optional"`
        OpenIdInWeCom string `json:"openIdInWeCom,optional"`
    }
)

type (
    CustomerInviter {
        Id int64 `json:"id"`
        Name string `json:"name"`
        Mobile string `json:"mobile"`
        Email string `json:"email"`
    }

    Customer {
        Id int64 `json:"id"`
        Name string `json:"name"`
        Mobile string `json:"mobile"`
        Email string `json:"email"`
        Inviter CustomerInviter `json:"inviter"`
        Source int `json:"source"`
        Type int `json:"type"`
        IsActivated bool `json:"isActivated"`
        CreatedAt string `json:"createdAt"`
        CustomerExternalId
    }
)

type (
    GetCustomerReqeuest {
        Id string `path:"id"`
    }

    GetCustomerReply {
        Customer Customer `json:"customer"`
    }
)

type (
    ListCustomersPageRequest {
        LikeName string `form:"likeName"`
        Sources []string `form:"sources"`
        LikeMobile string `form:"likeMobile"`
        Statuses []string `form:"statuses"`
        PageIndex int `form:"page"`
        PageSize int `form:"pageSize"`
    }

    ListCustomersPageReply {
        List []Customer `json:"list"`
        PageIndex int `json:"pageIndex"`
        PageSize int `json:"pageSize"`
        Total int64 `json:"total"`
    }

    ListCustomersRequest {
        LikeName string `form:"likeName"`
        Sources []string `form:"sources"`
        LikeMobile string `form:"likeMobile"`
        Statuses []string `form:"statuses"`
        PageIndex int `form:"page"`
        PageSize int `form:"pageSize"`
    }

    ListCustomersReply {
        List []Customer `json:"list"`
    }
)

type (
    CreateCustomerRequest {
        Name string `json:"name"`
        Mobile string `json:"mobile,optional"`
        Email string `json:"email,optional"`
        InviterId int64 `json:"inviterId,optional"`
        Source string `json:"source,optional,options=tiktok|ad|miniprogram|wechat|other"`
        Type string `json:"type,optional,options=personal|company"`
        IsActivated *bool `json:"isActivated,optional"`
        CustomerExternalId
    }

    CreateCustomerReply {
        CustomerId int64 `json:"customerId"`
    }
)

type (
    PatchCustomerRequest {
        Id string `path:"id"`
        Name string `json:"name,optional"`
        Mobile string `json:"mobile,optional"`
        Email string `json:"email,optional"`
        InviterId int64 `json:"inviterId,optional"`
        Source string `json:"source,optional,options=tiktok|ad|miniprogram|wechat|other"`
        Type string `json:"type,optional,options=personal|company"`
        IsActivated *bool `json:"isActivated,optional"`
        CustomerExternalId
    }

    PatchCustomerReply {
        Customer Customer `json:"customer"`
    }
)

type (
    DeleteCustomerRequest {
        Id string `path:"id"`
    }

    DeleteCustomerReply {
        CustomerId int64 `json:"customerId"`
    }
)

type (
    AssignCustomerToEmployeeRequest {
        Id string `path:"id"`
        EmployeeId int64 `json:"employeeId"`
    }

    AssignCustomerToEmployeeReply {
        CustomerId int64 `json:"customerId"`
    }
)