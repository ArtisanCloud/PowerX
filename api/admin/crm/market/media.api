syntax = "v1"

info(
    title: "媒体管理"
    desc: "媒体管理"
    author: "MichaelHu"
    email: "matrix-x@artisan-cloud.com"
    version: "v1"
)

@server(
    group: admin/crm/market/media
    prefix: /api/v1/admin/market
    middleware: UserJWTAuth
)

service PowerX {
    @doc "查询媒体列表"
    @handler ListMediasPage
    get /medias/page-list (ListMediasPageRequest) returns (ListMediasPageReply)
    @doc "请求媒体上传链接"
    @handler CreateMedia
    post /medias (CreateMediaRequest) returns (CreateMediaReply)

    @doc "创建或更新媒体"
    @handler UpdateMedia
    put /medias/:id (UpdateMediaRequest) returns (UpdateMediaReply)

    @doc "根据媒体key获取媒体"
    @handler GetMedia
    get /medias/:id (GetMediaRequest) returns (GetMediaReply)

    @doc "删除媒体"
    @handler DeleteMedia
    delete /medias/:id (DeleteMediaRequest) returns (DeleteMediaReply)
}

type (
    ListMediasPageRequest struct {
        MediaTypes []int8 `form:"mediaTypes,optional"`
        Keys []string `form:"keys,optional"`
        OrderBy string `form:"orderBy,optional"`
        PageIndex int `form:"pageIndex,optional"`
        PageSize int `form:"pageSize,optional"`
    }

    Media struct {
        Id int64 `json:"id,optional"`

        Title string `json:"title,optional"`
        SubTitle string `json:"subTitle,optional"`
        CoverImageId int64 `json:"coverImageId,optional"`
        ResourceUrl string `json:"resourceUrl,optional"`
        Description string `json:"description,optional"`
        MediaType int `json:"mediaType,optional"`
        ViewedCount int `json:"viewedCount,optional"`

        CoverImage *MediaResource `json:"coverImage,optional"`
        DetailImageIds []int64 `json:"detailImageIds,optional"`
        DetailImages []*MediaResource `json:"detailImages,optional"`
    }

    ListMediasPageReply struct {
        List []*Media `json:"list"`
        PageIndex int `json:"pageIndex"`
        PageSize int `json:"pageSize"`
        Total int64 `json:"total"`
    }
)

type (
    CreateMediaRequest struct {
        Media
    }

    CreateMediaReply struct {
        MediaId int64 `json:"id"`
    }
)

type (
    UpdateMediaRequest struct {
        MediaId int64 `path:"id"`
        Media
    }

    UpdateMediaReply struct {
        MediaId int64 `json:"id"`
    }
)

type (
    GetMediaRequest struct {
        MediaId int64 `path:"id"`
    }

    GetMediaReply struct {
        *Media
    }
)

type (
    DeleteMediaRequest struct {
        MediaId int64 `path:"id"`
    }

    DeleteMediaReply struct {
        MediaId int64 `json:"id"`
    }
)
