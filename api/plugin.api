syntax = "v1"

service PowerX {
    @doc "插件接口"
    @handler RegisterPlugin
    post /plugin/v1/plugins (RegisterPluginRequest) returns (RegisterPluginReply)

    @doc "插件列表拉取"
    @handler ListPlugin
    get /plugin/v1/plugins (ListPluginRequest) returns (ListPluginReply)

    @doc "插件路由拉取"
    @handler ListPluginFrontendRoutes
    get /plugin/v1/frontend-routes returns (ListPluginFrontendRoutesReply)
}

type (
    Route struct {
        Method string `json:"method"`
        Path string `json:"path"`
    }

    RegisterPluginRequest {
        Name string `json:"name"`
        Routes []Route `json:"routes"`
        Addr string `json:"addr"`
    }

    RegisterPluginReply {
        Name string `json:"name"`
        etc map[string]interface{} `json:"etc"`
    }
)

type (
    PluginWebRouteMeta {
        Locale string `json:"locale"`
        Icon string `json:"icon"`
        RequestAuth bool `json:"requestAuth"`
    }

    PluginWebRoutes struct {
        Name string `json:"name"`
        Path string `json:"path"`
        Meta PluginWebRouteMeta `json:"meta"`
        Children []PluginWebRoutes `json:"children"`
    }

    ListPluginRequest {
        // Scope ['routes']
        Socpe []string `form:"scope"`
    }

    PluginWebInfo struct {
        Name string `json:"name"`
        Desc string `json:"desc"`
        Verison string `json:"version"`
        IsEnabled bool `json:"isEnabled"`
        Routes []Route `json:"routes"`
    }

    ListPluginReply {
        Plugins []PluginWebInfo `json:"plugins"`
    }
)

type (
    ListPluginFrontendRoutesReply {
        Routes []PluginWebRoutes `json:"routes"`
    }
)
