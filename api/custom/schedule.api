syntax = "v1"

info(
    title: "日程表服务"
    desc: "日程表服务"
    author: "MichaelHu"
    email: "matrix-x@artisan-cloud.com"
    version: "v1"
)


@server(
    group: custom/schedule
    prefix: /api/v1/admin/reservationcenter
    middleware: EmployeeJWTAuth
)

service PowerX {
    @doc "查询日程表列表"
    @handler ListSchedules
    get /schedules (ListSchedulesPageRequest) returns (ListSchedulesPageReply)

    @doc "查询日程表详情"
    @handler GetSchedule
    get /schedules/:id (GetScheduleRequest) returns (GetScheduleReply)


    @doc "创建日程表"
    @handler CreateSchedule
    post /schedules (CreateScheduleRequest) returns (CreateScheduleReply)


    @doc "全量日程表"
    @handler PutSchedule
    put /schedules/:id (PutScheduleRequest) returns (PutScheduleReply)

    @doc "增量日程表"
    @handler PatchSchedule
    patch /schedules/:id (PatchScheduleRequest) returns (PatchScheduleReply)


    @doc "删除日程表"
    @handler DeleteSchedule
    delete /schedules/:id (DeleteScheduleRequest) returns (DeleteScheduleReply)

    @doc "分配日程表品类给日程表品类分类"
    @handler AssignScheduleToScheduleCategory
    post /schedules/:id/actions/assign-to-schedule-categroy (AssignScheduleToScheduleCategoryRequest) returns (AssignScheduleToScheduleCategoryReply)
}

type (



    Schedule {
        Id int64 `json:"id,optional"`

        Name string `json:"name"`
        Type int `json:"type"`
        Plan int `json:"plan"`
        AccountingCategory string `json:"accountingCategory"`
        CanSellOnline bool `json:"canSellOnline,optional"`
        CanUseForDeduct bool `json:"canUseForDeduct,optional"`
        Description string `json:"description,optional"`
        CoverURL string `json:"coverURL,optional"`
        PurchasedQuantity int `json:"purchasedQuantity,optional"`
        ValidityPeriodDays uint8 `json:"validityPeriodDays,optional"`
        SaleStartDate string `json:"saleStartDate,optional"`
        SaleEndDate string `json:"saleEndDate,optional"`
        ApprovalStatus int `json:"approvalStatus,optional"`
        IsActivated bool `json:"isActivated,optional"`
        CreatedAt string `json:"createdAt,optional"`

    }
)
type (
    ListSchedulesPageRequest struct {
        ScheduleType string `form:"scheduleType,optional"`
        Keys []string `form:"keys,optional"`
        OrderBy string `form:"orderBy,optional"`
        PageIndex int `form:"pageIndex,optional"`
        PageSize int `form:"pageSize,optional"`
    }


    ListSchedulesPageReply struct {
        List []Schedule `json:"list"`
        PageIndex int `json:"pageIndex"`
        PageSize int `json:"pageSize"`
        Total int64 `json:"total"`
    }
)

type (
    CreateScheduleRequest struct {
//        currentDate
    }

    CreateScheduleReply struct {
        ScheduleKey int64 `json:"id"`
    }
)

type (
    GetScheduleRequest struct {
        ScheduleId int64 `path:"id"`
    }

    GetScheduleReply struct {
        *Schedule
    }
)


type (
    PutScheduleRequest struct {
        ScheduleId int64 `path:"id"`
        Schedule
    }

    PutScheduleReply struct {
        *Schedule
    }
)

type (
    PatchScheduleRequest struct {
        ScheduleId int64 `path:"id"`
        Schedule
    }

    PatchScheduleReply struct {
        *Schedule
    }
)


type (
    DeleteScheduleRequest struct {
        ScheduleId int64 `path:"id"`
    }

    DeleteScheduleReply struct {
        ScheduleId int64 `json:"id"`
    }
)


type (
    AssignScheduleToScheduleCategoryRequest {
        Id int64 `json:"id"`
        ScheduleCategoryId int64 `json:"scheduleCategoryId"`
    }

    AssignScheduleToScheduleCategoryReply {
        Schedule
    }
)
